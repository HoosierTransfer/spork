#include <lenia/Lenia.hpp>

#include <Math.hpp>
#include <Kernel.hpp>
#include <defines.h>

#include <imgui/imgui.h>
#include <imgui/implot.h>

#include <map>

#include <util/StringUtil.hpp>

#include <iostream>
#ifdef OPENMP
#include <omp.h>
#endif

#include <lenia/LeniaTaxonomyTree.hpp>

using namespace std;

map<string, int> coreName = {
    {"bump4", 0},
    {"quad4", 1},
    {"trap1/5", 2},
    {"stpz1/4", 3},
    {"life", 4}
};

map<string, int> deltaName = {
    {"gaus", 0},
    {"quad4", 1},
    {"trap", 2},
    {"stpz", 3},
};

struct CellArray {
    vector<vector<string>> arr;
    int w;
    int h;
};

Lenia::Lenia(unsigned int width, unsigned int height, LeniaTemplate rule) : Grid(width, height) {
    conv2d = new FastConv2D(buildKernel(width, rule.kernelRadius, rule.coreId, rule.layerId, rule.kernel_B, rule.alpha), width, height);
    kernel = buildKernel(width, rule.kernelRadius, rule.coreId, rule.layerId, rule.kernel_B, rule.alpha);
    updateFrequency = rule.updateFrequency;
    NS = rule.kernelRadius;
    mu = rule.mu;
    sigma = rule.sigma;
    alpha = rule.alpha;
    delta = vector<vector<double>>(height, vector<double>(width, 0.0));

    reset();

    tree.addPhylum("Exokernel");
    tree.addClass("Exokernel", "Orbiformes");
    tree.addOrder("Exokernel", "Orbiformes", "Orbidae");
    tree.addFamily("Exokernel", "Orbiformes", "Orbidae", "Haplorbinae");
    tree.addGenus("Exokernel", "Orbiformes", "Orbidae", "Haplorbinae", "Orbium");
    tree.addSpecies("Exokernel", "Orbiformes", "Orbidae", "Haplorbinae", "Orbium", "Unicaudatus", "R=13;k=bump4();d=gaus(0.15,0.017)*0.1;cells=0,0,0,0,0,0,0,0.046635,0.016378,0,0,0,0,0,0,0.217067,0,0,0,0/0,0,0,0,0,0,0.125098,0.204575,0.211296,0.134021,0.055619,0.085293,0.107922,0.085737,0.029773,0.019386,0,0,0,0/0,0,0,0,0,0.045958,0.252328,0.36103,0.389246,0.35167,0.185232,0.195703,0.179571,0.184834,0.178899,0.123781,0.49815,0,0,0/0,0,0,0,0,0.060046,0.34714,0.484476,0.540145,0.473919,0.231163,0.087471,0.048787,0.040251,0.080623,0.203995,0.542929,0,0,0/0,0,0,0.032505,0.124425,0.177596,0.359273,0.47567,0.475021,0.374229,0.186981,0,0,0,0,0,0.207603,0.590702,0,0/0,0,0,0.144917,0.18495,0.153946,0.099778,0.283184,0.323271,0.299499,0.231208,0,0,0,0,0,0,0.794803,0,0/0.066621,0,0.099213,0.185356,0.089117,0.014874,0,0.17098,0.310394,0.373661,0.372283,0.310158,0,0,0,0,0,0.072359,0.386474,0/0,0.15827,0.162346,0.133053,0,0,0,0.208428,0.386487,0.480001,0.523529,0.499131,0.086516,0,0,0,0,0,0.593169,0/0,0.533744,0.217561,0.054683,0,0,0,0.02012,0.47831,0.602035,0.669172,0.677053,0.600447,0,0,0,0,0,0.305881,0.055525/0,0.15771,0.258454,0,0,0,0,0,0.56595,0.723851,0.809853,0.847871,0.809416,0.236189,0,0,0,0,0.139491,0.210699/0,0,0.768594,0,0,0,0,0,0.520445,0.834032,0.94237,0.980416,0.976311,0.759551,0,0,0,0,0.105057,0.235807/0,0,0.802193,0,0,0,0,0,0.279938,0.92236,1,0.998122,1,1,0.392519,0,0,0,0.121434,0.211343/0,0,0.138761,0.251934,0,0,0,0,0.082129,0.977983,1,0.879746,0.915564,1,0.708817,0.169153,0.006395,0.032788,0.171655,0.166418/0,0,0,0.580998,0,0,0,0,0,0.734279,1,0.861716,0.791465,0.897608,0.775,0.369085,0.163034,0.147425,0.217695,0.103712/0,0,0,0.299194,0.158772,0,0,0,0,0.472113,0.930265,0.854523,0.752704,0.76766,0.708373,0.465323,0.286149,0.235546,0.210626,0.035706/0,0,0,0,0.333719,0.062536,0,0,0,0.293242,0.669678,0.762607,0.70203,0.666477,0.601912,0.456309,0.330376,0.246871,0.134791,0/0,0,0,0,0.109506,0.239933,0.100941,0.045983,0.091801,0.243429,0.47035,0.602668,0.596386,0.545097,0.474073,0.381577,0.284603,0.170007,0.035192,0/0,0,0,0,0,0.12455,0.215022,0.176418,0.18709,0.248233,0.358828,0.431963,0.440249,0.408104,0.34657,0.265861,0.169397,0.05693,0,0/0,0,0,0,0,0,0.06293,0.175891,0.224172,0.248292,0.286178,0.307314,0.299384,0.260401,0.214577,0.139794,0.049999,0,0,0/0,0,0,0,0,0,0,0,0.062429,0.12363,0.152543,0.157378,0.146105,0.117563,0.06282,0.019729,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0.004379,0.003484,0,0,0,0,0,0,0");
    tree.addSpecies("Exokernel", "Orbiformes", "Orbidae", "Haplorbinae", "Orbium", "Unicaudatus Ignis", "R=13;k=bump4();d=gaus(0.119,0.0148)*0.1;cells=0,0,0,0,0,0,0,0,0,0,0.069421,0.117662,0.142289,0.145435,0.131273,0.094117,0.054681,0.008958,0,0,0,0/0,0,0,0,0,0,0,0,0.088581,0.175754,0.164234,0.148706,0.164418,0.200806,0.232544,0.233174,0.184927,0.127432,0.048034,0,0,0/0,0,0,0,0,0,0,0.19709,0.169667,0.048036,0.022761,0.046826,0.109761,0.196357,0.268081,0.309369,0.289264,0.244823,0.158961,0.056737,0,0/0,0,0,0,0,0,0.289097,0.122108,0,0,0,0,0.099755,0.263202,0.36939,0.402554,0.36798,0.324552,0.25327,0.154559,0.038238,0/0,0,0,0,0,0.315312,0.115647,0,0,0,0,0,0.214415,0.47246,0.551386,0.523447,0.453401,0.379939,0.305501,0.227202,0.106988,0/0,0,0,0,0.081268,0.267938,0,0,0,0,0,0.067131,0.512567,0.727973,0.67031,0.604311,0.541356,0.417498,0.301961,0.236613,0.168446,0.032432/0,0,0,0,0.649251,0,0,0,0,0,0,0.324226,0.857427,0.838406,0.684275,0.664137,0.618669,0.429782,0.262971,0.213874,0.193179,0.07249/0,0,0,0.749196,0.035355,0,0,0,0,0,0,0.698781,1,0.879401,0.75945,0.789812,0.656723,0.34014,0.156958,0.13078,0.181279,0.098191/0,0,0.392792,0.200061,0,0,0,0,0,0,0.19903,0.96169,1,1,0.981285,0.884922,0.496922,0.149843,0.038218,0.060043,0.145417,0.119342/0,0,0.155611,0.151598,0,0,0,0,0,0,0.566249,0.925691,1,1,1,0.579041,0.121487,0,0,0.003212,0.119654,0.115669/0,0.307325,0.1189,0.108673,0,0,0,0,0,0.173945,0.71833,0.843827,0.916056,0.938973,0.463967,0,0,0,0,0,0.133301,0.079116/0.210893,0,0.119624,0.112333,0,0,0,0,0,0.545651,0.651122,0.725361,0.756342,0.248904,0,0,0,0,0,0,0.189153,0.015656/0,0,0.103013,0.145385,0.043158,0,0,0,0.377888,0.497403,0.562455,0.589668,0.163004,0,0,0,0,0,0,0.028835,0.223581,0/0,0,0.081152,0.131913,0.122273,0.061217,0,0.241475,0.3635,0.439489,0.462499,0.242174,0,0,0,0,0,0,0,0.240124,0.030268,0/0,0,0.030242,0.091523,0.127116,0.145543,0.319398,0.360209,0.34843,0.360268,0.332183,0,0,0,0,0,0,0,0.008883,0.309718,0,0/0,0,0,0.018964,0.059841,0.164882,0.463334,0.507483,0.415588,0.287213,0,0,0,0,0,0,0,0,0.583628,0,0,0/0,0,0,0,0,0.303122,0.455507,0.513453,0.460523,0.141846,0,0,0,0,0,0,0,0.625161,0,0,0,0/0,0,0,0,0.077669,0.295188,0.391783,0.406028,0.311573,0.137122,0.074934,0,0,0,0,0.056182,0.473111,0,0,0,0,0/0,0,0,0,0.085415,0.221152,0.26934,0.213265,0.061787,0.119093,0.142407,0.098583,0.083003,0.092013,0.159868,0.184653,0.214987,0,0,0,0,0/0,0,0,0,0.032472,0.098854,0.072107,0,0.00593,0.063712,0.11684,0.134174,0.14394,0.127236,0.098714,0.450257,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0.00054,0.036825,0.04985,0.043166,0,0.407231,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0.246521,0,0,0,0,0,0,0,0");
    tree.addSpecies("Exokernel", "Orbiformes", "Orbidae", "Haplorbinae", "Orbium", "Bicaudatus", "R=13;k=bump4();d=gaus(0.15,0.014)*0.1;cells=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.138184,0,0,0,0/0,0,0,0,0,0,0,0,0.117655,0.004293,0.011308,0.004585,0,0,0,0,0,0,0/0,0,0,0,0,0.094716,0.000392,0.060949,0.345952,0.327413,0.177321,0.175695,0.171068,0.127034,0.048909,0.556051,0,0,0/0,0,0,0,0,0.240857,0.399727,0.2079,0.392191,0.384978,0.138429,0.11143,0.119278,0.165463,0.229663,0.511586,0,0,0/0,0,0,0,0.114445,0.359734,0.430431,0.184206,0.081499,0.250865,0.136112,0,0,0,0.034971,0.228666,0.759269,0,0/0,0,0,0.110742,0.206378,0.142486,0.242064,0.065061,0,0.103913,0.227171,0,0,0,0,0,0.67971,0,0/0.21533,0,0.051127,0.200606,0.109896,0,0.140548,0.184976,0.027012,0.165442,0.426011,0.340117,0,0,0,0,0.028628,0.638365,0/0,0.068494,0.174764,0.156605,0,0,0.112707,0.38753,0.32419,0.331575,0.618199,0.597707,0.007203,0,0,0,0,0.580319,0/0,0.539485,0.250226,0.0486,0,0,0,0.51186,0.652756,0.483957,0.681888,0.772745,0.563319,0,0,0,0,0.336188,0.144252/0,0.516194,0.283124,0,0,0,0,0.618921,0.765005,0.641417,0.636288,0.93742,0.904495,0.220801,0,0,0,0.224787,0.212137/0,0,0.642428,0,0,0,0,0.433615,0.866778,0.792348,0.625637,0.806943,1,0.710162,0.0613,0,0.015205,0.200497,0.191927/0,0,0.899166,0,0,0,0,0.197724,0.950333,0.9308,0.555206,0.562079,0.960213,0.971716,0.376406,0.107134,0.11412,0.210485,0.14927/0,0,0.48954,0.210056,0,0,0,0.05294,0.901152,1,0.593559,0.508178,0.773392,0.92932,0.545889,0.240775,0.193504,0.221846,0.077572/0,0,0,0.505054,0,0,0,0.03789,0.632069,1,0.775695,0.616047,0.708006,0.770852,0.539248,0.323161,0.245134,0.192183,0.021734/0,0,0,0.308282,0.253703,0.016008,0,0.071623,0.384051,0.766947,0.800827,0.687195,0.658554,0.617326,0.469969,0.328833,0.237335,0.111917,0/0,0,0,0.012541,0.280447,0.196789,0.115512,0.143543,0.275242,0.488218,0.613092,0.601448,0.542083,0.469406,0.369403,0.266448,0.158025,0.022208,0/0,0,0,0,0.051149,0.217862,0.2096,0.206044,0.251477,0.338563,0.409351,0.426132,0.394514,0.338752,0.257278,0.160647,0.04883,0,0/0,0,0,0,0,0.02626,0.146678,0.201051,0.22712,0.254162,0.279729,0.275875,0.253334,0.202427,0.131089,0.043377,0,0,0/0,0,0,0,0,0,0,0.038313,0.083333,0.126499,0.138886,0.13162,0.102375,0.056931,0.00818,0,0,0,0");
    tree.addSpecies("Exokernel", "Orbiformes", "Orbidae", "Haplorbinae", "Orbium", "Bicaudatus Ignis", "R=13;k=bump4();d=gaus(0.12,0.0113)*0.1;cells=0,0,0,0,0,0,0,0,0,0,0,0.189859,0.058189,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0.434591,0.171007,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0.626939,0.377254,0.162718,0.133888,0.077284,0.007383,0,0,0,0,0,0,0/0,0,0,0,0,0.453118,0.454541,0.025402,0,0.005888,0.048795,0.101489,0.152514,0.098127,0,0,0,0,0,0/0,0,0,0.096435,0.346962,0.037172,0,0,0,0,0,0,0.05092,0.157159,0.113724,0,0,0,0,0/0,0,0.099372,0.205854,0.000312,0,0,0,0,0,0,0,0,0.066559,0.16384,0.21848,0.164615,0,0,0/0,0.032122,0.186069,0.026474,0,0,0,0,0,0,0,0,0.121307,0.201496,0.392753,0.325112,0.017011,0,0,0/0,0.158287,0.096112,0,0,0,0,0,0,0,0.126424,0.367279,0.249058,0.174308,0.178859,0.260347,0.144278,0.081698,0.088286,0/0.012397,0.177552,0.061397,0,0,0,0.011771,0.219227,0.484284,0.766114,0.67519,0.354094,0,0,0.108603,0.338237,0.410427,0.145127,0,0/0.059021,0.197329,0.088419,0.052639,0.11685,0.380363,0.861653,1,1,0.884026,0.635087,0.288104,0,0.011064,0.264917,0.258302,0.165743,0.063171,0,0/0.073572,0.224876,0.170915,0.203639,0.427246,0.794701,0.89945,0.816149,0.760694,0.754735,0.675831,0.581595,0.513106,0.359528,0.162492,0,0.123781,0.11963,0,0/0.069428,0.255457,0.27031,0.366352,0.598639,0.622711,0.391076,0.35927,0.549307,0.817159,0.915826,0.769824,0.448324,0,0,0,0.082728,0.128031,0,0/0.040418,0.261172,0.330902,0.432575,0.578013,0.515226,0.318988,0.36069,0.771458,1,0.90289,0.209933,0,0,0,0,0.077671,0.121821,0,0/0.003771,0.214772,0.346947,0.417725,0.532167,0.583832,0.580602,0.758607,1,0.884596,0.12101,0,0,0,0,0,0.105811,0.07466,0,0/0,0.117485,0.306486,0.383643,0.444124,0.524256,0.610443,0.658861,0.486374,0.07224,0,0,0,0,0,0,0.160035,0,0.133767,0.128199/0,0.01539,0.214101,0.329387,0.33786,0.312955,0.25915,0.159359,0.007445,0,0,0,0,0,0,0.124583,0.120069,0.508781,0,0/0,0,0.05941,0.241637,0.27765,0.201418,0.0956,0.00534,0,0,0,0,0,0,0.082002,0.664195,0,0,0,0/0,0,0,0.06458,0.206511,0.200421,0.117713,0.034709,0,0,0,0,0.074261,0.564969,0.373156,0,0,0,0,0/0,0,0,0,0.031361,0.145231,0.180602,0.159134,0.116983,0.12283,0.173778,0.303204,0.286996,0,0,0,0,0,0,0/0,0,0,0,0,0,0.01179,0.062342,0.08503,0.085759,0.034036,0,0,0,0,0,0,0,0,0");
    tree.addSpecies("Exokernel", "Orbiformes", "Orbidae", "Haplorbinae", "Gyrorbium", "R=13;k=bump4();d=gaus(0.156,0.0224)*0.1;cells=0,0,0,0,0.002361,0.056679,0.074237,0.058153,0.036865,0.02945,0.038741,0.144619,0.314589,0.187253,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0.028452,0.179994,0.24466,0.257462,0.239952,0.237155,0.277563,0.805087,0.951262,0.732853,0.621393,0.539581,0.27516,0,0,0.007538,0.105842,0.001005,0,0,0,0,0/0,0,0.022023,0.243225,0.332402,0.355703,0.376385,0.401582,0.435081,0.987337,1,0.502565,0.224345,0.156561,0.213654,0.363566,0.381341,0.166761,0.009298,0,0,0,0,0,0,0/0,0,0.228921,0.300975,0.247896,0.27951,0.360272,0.451215,0.728862,1,0.642399,0.135454,0.030765,0,0,0.00138,0.116932,0.240677,0.144575,0.022467,0,0,0,0,0,0/0,0.109954,0.278207,0.143315,0.077537,0.144922,0.284763,0.452025,1,1,0.500406,0.057613,0,0,0,0,0,0.039434,0.193292,0.085063,0,0,0,0,0,0/0,0.247409,0.150293,0,0,0.0668,0.253946,0.63987,1,1,0.626898,0.006061,0,0,0,0,0,0,0.084501,0.155724,0.012198,0,0,0,0,0.00055/0.024017,0.248439,0.046436,0,0,0.050717,0.286662,0.81592,1,1,0.805782,0.126132,0,0,0,0,0,0,0.03775,0.148979,0.049622,0,0,0,0,0.140566/0.084814,0.223898,0,0,0,0.087357,0.341422,0.672528,1,1,0.930336,0.503709,0,0,0,0,0,0,0.04504,0.138356,0.037611,0,0,0,0,0.028477/0.110907,0.218523,0,0,0,0.13002,0.389156,0.565098,1,1,0.874492,0.64762,0.445422,0,0,0,0,0,0.089939,0.121507,0,0,0,0,0.504223,0/0.092608,0.25722,0.013015,0,0,0.179689,0.440585,0.568716,0.644462,0.965468,0.773314,0.602939,0.453706,0.204398,0.116173,0,0,0,0.150987,0.07334,0,0,0,0.033733,0.500028,0/0.031554,0.310566,0.116187,0.009396,0.048233,0.224814,0.502318,0.672349,0.729302,0.703462,0.683434,0.537023,0.399176,0.268177,0.179043,0.118176,0,0.060767,0.323662,0.055818,0,0,0.189266,0.532389,0,0/0,0.276894,0.27628,0.130365,0.133097,0.274754,0.545945,0.768748,0.815672,0.650674,0.352876,0.305138,0.301155,0.183815,0,0,0,0.29567,0.816497,0.827883,0.67884,0.578411,0.519407,0.05772,0,0/0,0.127203,0.368178,0.314934,0.273487,0.341382,0.558275,0.747338,0.684555,0.30115,0,0,0,0,0,0,0,0.450052,0.924228,0.762594,0.618636,0.358421,0,0,0,0/0,0,0.220292,0.39919,0.417945,0.415611,0.553153,0.688262,0.446575,0,0,0,0,0,0,0,0.05123,0.446148,0.849597,0.63502,0.240777,0,0,0,0,0/0,0,0,0.214124,0.389138,0.465882,0.507153,0.679239,0.423173,0,0,0,0,0,0,0,0.156184,0.350795,0.614682,0.363703,0.042151,0,0,0,0,0/0,0,0,0,0.135569,0.323619,0.462284,0.593632,0.643022,0,0,0,0,0,0,0.053982,0.209541,0.284656,0.455342,0.240868,0,0,0,0,0,0/0,0,0,0,0,0.044047,0.236651,0.430222,0.64163,0.597378,0,0,0,0,0.03441,0.181628,0.197864,0.359681,0.401288,0.109371,0,0,0,0,0,0/0,0,0,0,0,0,0,0.090282,0.312609,0.590588,0.8382,0.36409,0.060973,0.124948,0.225441,0.258359,0.473786,0.494745,0.179031,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0.023919,0.213383,0.567983,0.907902,0.930678,0.825432,0.630971,0.302901,0,0,0,0,0,0,0,0,0");
    tree.addSpecies("Exokernel", "Orbiformes", "Orbidae", "Haplorbinae", "Vagorbium", "R=26;k=bump4();d=gaus(0.126,0.0155)*0.1;cells=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.009086,0.015291,0.018161,0.017996,0.014869,0.008624,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0.000786,0.022902,0.038979,0.049585,0.055954,0.059259,0.060339,0.059646,0.057241,0.0528,0.045624,0.034716,0.019041,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0.001595,0.03465,0.058439,0.075428,0.100787,0.117053,0.126577,0.13127,0.132449,0.130826,0.126483,0.11885,0.106713,0.088305,0.064962,0.049564,0.02633,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0.028238,0.064718,0.099066,0.134617,0.156008,0.169454,0.18923,0.201248,0.207287,0.208726,0.206413,0.200486,0.190271,0.174352,0.155954,0.140448,0.115282,0.07676,0.051565,0.016022,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0.050133,0.092335,0.144225,0.170748,0.202519,0.228384,0.245861,0.257388,0.270278,0.279325,0.282048,0.279533,0.272102,0.259083,0.248857,0.234996,0.213568,0.18152,0.155027,0.11922,0.071615,0.032497,0,0,0,0,0,0,0/0,0,0,0,0,0,0.064476,0.125424,0.16766,0.200323,0.225937,0.241265,0.275673,0.304431,0.326785,0.341953,0.350155,0.352801,0.351518,0.346982,0.338453,0.324227,0.302521,0.272014,0.246171,0.220323,0.179141,0.14833,0.089414,0.042725,0,0,0,0,0,0/0,0,0,0,0,0.069965,0.143747,0.176709,0.205208,0.209264,0.238072,0.264503,0.293774,0.341199,0.381091,0.409536,0.425718,0.43191,0.431113,0.424594,0.411122,0.388141,0.353916,0.321484,0.290946,0.254276,0.2287,0.200447,0.163276,0.105295,0.044581,0,0,0,0,0/0,0,0,0,0.065169,0.150106,0.184831,0.188957,0.188759,0.193376,0.211087,0.255044,0.306214,0.360959,0.422243,0.468149,0.494107,0.504133,0.503575,0.494526,0.474668,0.43973,0.402463,0.356436,0.304767,0.262418,0.238981,0.210645,0.202896,0.167699,0.107482,0.035425,0,0,0,0/0,0,0,0.045975,0.145559,0.186816,0.168248,0.15542,0.132499,0.146659,0.167715,0.220313,0.299252,0.385823,0.4645,0.520455,0.555375,0.568249,0.567317,0.555679,0.53743,0.501038,0.442576,0.367876,0.294815,0.248342,0.208787,0.198613,0.190976,0.196376,0.167157,0.092666,0.012114,0,0,0/0,0,0.007848,0.12163,0.187978,0.161681,0.126502,0.090787,0.074728,0.080187,0.117554,0.176372,0.276844,0.400518,0.513179,0.590443,0.628049,0.639364,0.638951,0.630924,0.607242,0.554596,0.467539,0.363959,0.276974,0.204376,0.162275,0.150222,0.153287,0.171843,0.191228,0.162594,0.070289,0,0,0/0,0,0.068033,0.179481,0.170632,0.114935,0.060176,0.012476,0.008782,0.010498,0.054834,0.135528,0.254806,0.407987,0.558076,0.655843,0.697766,0.706714,0.704512,0.696057,0.667932,0.59839,0.490374,0.36044,0.236137,0.144979,0.104059,0.077161,0.097318,0.120474,0.162307,0.191006,0.141539,0.028868,0,0/0,0.005994,0.152233,0.201974,0.130319,0.048947,0,0,0,0,0,0.084255,0.238159,0.431597,0.608018,0.715371,0.756249,0.759266,0.75484,0.748169,0.727864,0.655498,0.515765,0.338562,0.181461,0.087699,0.029084,0.017232,0.022626,0.06301,0.111311,0.167149,0.182445,0.077664,0,0/0,0.056401,0.215209,0.177554,0.065171,0,0,0,0,0,0,0.02829,0.213749,0.457227,0.674908,0.79426,0.823217,0.815649,0.811327,0.814995,0.797064,0.708747,0.527519,0.308934,0.132489,0.015204,0,0,0,0,0.053743,0.131878,0.19825,0.151787,0.011103,0/0,0.135777,0.234414,0.119169,0,0,0,0,0,0,0,0,0.193511,0.478461,0.737558,0.865858,0.883168,0.86425,0.858452,0.869183,0.856004,0.752668,0.543051,0.281405,0.06721,0,0,0,0,0,0,0.074305,0.180113,0.201136,0.052592,0/0,0.216585,0.218292,0.044688,0,0,0,0,0,0,0,0,0.182426,0.516206,0.804852,0.931153,0.931495,0.900222,0.894027,0.920014,0.922594,0.812945,0.552408,0.235087,0.001812,0,0,0,0,0,0,0.003062,0.129229,0.225453,0.108706,0/0.029185,0.280912,0.185217,0,0,0,0,0,0,0,0,0,0.163692,0.54985,0.87913,1,0.994692,0.951431,0.94885,0.985126,0.992328,0.858321,0.541714,0.188769,0,0,0,0,0,0,0,0,0.087492,0.237422,0.16025,0/0.079363,0.324401,0.133807,0,0,0,0,0,0,0,0,0,0.144594,0.571529,0.939469,1,1,1,1,1,1,0.889598,0.530763,0.136012,0,0,0,0,0,0,0,0,0.030046,0.221004,0.225006,0/0.144041,0.363009,0.068563,0,0,0,0,0,0,0,0,0,0.133333,0.592413,0.984158,1,1,1,1,1,1,0.913147,0.49692,0.067249,0,0,0,0,0,0,0,0,0,0.208143,0.274729,0.009356/0.215637,0.388918,0,0,0,0,0,0,0,0,0,0,0.113206,0.602895,1,1,1,1,1,1,1,0.903059,0.438258,0.002147,0,0,0,0,0,0,0,0,0,0.187892,0.328868,0.014372/0.293703,0.403483,0,0,0,0,0,0,0,0,0,0,0.085024,0.597419,0.974209,1,1,1,1,1,1,0.859609,0.374952,0,0,0,0,0,0,0,0,0,0,0.166579,0.382092,0.011831/0.377688,0.407574,0,0,0,0,0,0,0,0,0,0,0.057192,0.577185,0.941443,0.982911,1,1,1,1,0.974008,0.804908,0.300294,0,0,0,0,0,0,0,0,0,0,0.163916,0.435174,0.00176/0.461341,0.404482,0,0,0,0,0,0,0,0,0,0,0.026617,0.557324,0.885337,0.945582,0.967975,0.980168,0.978209,0.962303,0.929663,0.731777,0.211093,0,0,0,0,0,0,0,0,0,0,0.161138,0.496636,0/0.536188,0.412984,0,0,0,0,0,0,0,0,0,0,0,0.527156,0.832561,0.889662,0.928539,0.94093,0.939334,0.912696,0.867906,0.640986,0.109928,0,0,0,0,0,0,0,0,0,0,0.194561,0.542895,0/0.602771,0.420495,0,0,0,0,0,0,0,0,0,0,0,0.482017,0.775763,0.838526,0.868407,0.879553,0.875147,0.856471,0.797075,0.537677,0.012103,0,0,0,0,0,0,0,0,0,0,0.249468,0.585491,0/0.646976,0.428078,0,0,0,0,0,0,0,0,0,0,0,0.422901,0.715741,0.775974,0.807335,0.821366,0.81296,0.784428,0.729684,0.435384,0,0,0,0,0,0,0,0,0,0,0,0.336468,0.583848,0/0.665068,0.430358,0,0,0,0,0,0,0,0,0,0,0,0.373428,0.662064,0.714492,0.754562,0.762936,0.756636,0.717145,0.665357,0.31797,0,0,0,0,0,0,0,0,0,0,0,0.458541,0.552067,0/0.658817,0.418934,0.028336,0,0,0,0,0,0,0,0,0,0,0.314117,0.593008,0.658371,0.684079,0.69222,0.682569,0.653755,0.58717,0.186877,0,0,0,0,0,0,0,0,0,0,0,0.572442,0.470637,0/0.632314,0.394652,0.074221,0,0,0,0,0,0,0,0,0,0,0.24692,0.523882,0.587114,0.616339,0.625676,0.611789,0.579152,0.509227,0.07246,0,0,0,0,0,0,0,0,0,0,0.048126,0.66862,0.364429,0/0.591381,0.338175,0.145227,0,0,0,0,0,0,0,0,0,0,0.19774,0.457216,0.515002,0.550889,0.561396,0.543129,0.501446,0.431264,0,0,0,0,0,0,0,0,0,0,0,0.131666,0.711459,0.235931,0/0.548699,0.252078,0.202973,0.043443,0,0,0,0,0,0,0,0,0,0.150512,0.388159,0.447165,0.483036,0.487834,0.475752,0.426158,0.337553,0,0,0,0,0,0,0,0,0,0,0.030065,0.211993,0.698791,0.101566,0/0.496967,0.197178,0.228289,0.105426,0,0,0,0,0,0,0,0,0,0.104195,0.319992,0.386968,0.410974,0.416157,0.400056,0.358365,0.242624,0,0,0,0,0,0,0,0,0,0,0.103242,0.251353,0.665448,0,0/0.436812,0.131448,0.231344,0.168585,0.057176,0,0,0,0,0,0,0,0,0.090221,0.272153,0.328202,0.357141,0.361877,0.339849,0.297739,0.161455,0,0,0,0,0,0,0,0,0,0.046388,0.177698,0.236494,0.603141,0,0/0.369193,0.055267,0.187682,0.210544,0.12785,0.044137,0,0,0,0,0,0,0,0.098747,0.250436,0.303345,0.337034,0.339779,0.309187,0.252664,0.093256,0,0,0,0,0,0,0,0,0.022682,0.125956,0.220704,0.182207,0.537904,0,0/0.306429,0,0.135409,0.201457,0.173849,0.110609,0.055613,0.016142,0,0,0,0,0,0.145678,0.265969,0.329889,0.34643,0.342393,0.31626,0.250536,0.073641,0,0,0,0,0,0,0,0.023617,0.08929,0.187151,0.210513,0.111756,0.468251,0,0/0.249167,0,0.060131,0.16305,0.196585,0.168737,0.127425,0.082764,0.064834,0.054602,0.052643,0.05612,0.061487,0.249321,0.336212,0.382951,0.402145,0.395031,0.359881,0.298992,0.100848,0.025227,0.009343,0,0,0,0.012033,0.046816,0.089148,0.167626,0.199857,0.15601,0.032093,0.386341,0,0/0.189367,0,0,0.103525,0.168554,0.189522,0.16725,0.158548,0.140477,0.129133,0.127588,0.13278,0.140051,0.329211,0.415356,0.461208,0.484208,0.475207,0.432621,0.364094,0.154963,0.084752,0.075455,0.066749,0.062962,0.067862,0.082049,0.120118,0.166048,0.196826,0.170665,0.075205,0,0.308778,0,0/0.122494,0,0,0.021176,0.10059,0.155785,0.177506,0.181995,0.174184,0.169268,0.171085,0.177607,0.185143,0.387701,0.464627,0.515856,0.526703,0.51797,0.488867,0.413766,0.20222,0.161359,0.151157,0.141004,0.136722,0.14292,0.157986,0.166708,0.188145,0.16758,0.105916,0,0,0.208544,0,0/0.044192,0,0,0,0.040046,0.092145,0.136651,0.146799,0.162405,0.171492,0.175781,0.177655,0.17814,0.387548,0.46937,0.503658,0.520376,0.512932,0.481165,0.419551,0.205973,0.186005,0.179014,0.171392,0.16779,0.171343,0.178782,0.174064,0.152241,0.098287,0.020839,0,0,0.108558,0,0/0,0,0,0,0,0.025864,0.056438,0.096839,0.116907,0.126973,0.132686,0.135852,0.137449,0.337545,0.411163,0.455822,0.478264,0.470773,0.433888,0.378387,0.152748,0.150506,0.154504,0.159906,0.160186,0.153685,0.139699,0.129486,0.078543,0.027282,0,0,0,0,0,0/0,0,0,0,0,0,0,0.020883,0.035062,0.043237,0.049005,0.053251,0.056433,0.270419,0.337133,0.382427,0.396629,0.392271,0.366521,0.299518,0.087686,0.099171,0.107676,0.111945,0.111613,0.10502,0.085451,0.053408,0.013969,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0.182625,0.258608,0.295145,0.313377,0.307295,0.278691,0.214904,0.019556,0.027173,0.03223,0.034337,0.033643,0.029027,0.015126,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0.110219,0.176394,0.221982,0.242579,0.232439,0.19423,0.135275,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0.04296,0.113421,0.153708,0.16628,0.158852,0.122156,0.053979,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.054861,0.08922,0.101901,0.089119,0.054743,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.033582,0.046484,0.028285,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0");

    tree.addFamily("Exokernel", "Orbiformes", "Orbidae", "Polyorbinae");
    tree.addSpecies("Exokernel", "Orbiformes", "Orbidae", "Polyorbinae", "Synorbium", "R=13;k=bump4();d=gaus(0.152,0.0156)*0.1;cells=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.014301,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.017282,0,0,0,0,0.005795,0.053461,0.066152,0.032893,0,0.35562,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.141465,0.090613,0,0.051443,0.035553,0.127147,0.172675,0.162822,0.174531,0.164367,0.08122,0.435097,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.175932,0.386421,0.206076,0.20786,0.180278,0.1762,0.087885,0.023429,0.005127,0.05665,0.191956,0.549834,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.122391,0.480268,0.526472,0.363351,0.373923,0.099872,0,0,0,0,0,0.117645,0.895437,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.491451,0.719108,0.580083,0.388074,0.119982,0,0,0,0,0,0,0.180643,0.547827,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.053545,0.220286,0.748975,0.766048,0.340297,0.221139,0.12828,0,0,0,0,0,0,0.590154,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.004784,0.052547,0.10759,0.158133,0.202022,0.600791,0.675962,0.406319,0.210114,0.337558,0.273244,0,0,0,0,0,0,0.527683,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.014251,0.099907,0.145821,0.16821,0.162035,0.133312,0.082105,0.051332,0.520908,0.6001,0.375009,0.458896,0.505139,0.372792,0,0,0,0,0,0.364949,0.060006/0,0,0,0,0,0,0.009532,0.029022,0,0,0,0,0,0.013048,0.122662,0.171162,0.139385,0.074859,0.020279,0,0,0,0.386414,0.640272,0.635774,0.561693,0.724966,0.670774,0.259974,0,0,0,0,0.181339,0.231438/0,0,0,0,0,0,0,0.243611,0.172594,0,0,0,0.007684,0.114145,0.158454,0.084386,0,0,0,0,0,0,0,0.657114,0.841932,0.764042,0.828817,0.892654,0.839752,0.177561,0,0,0,0.140592,0.25965/0,0,0,0,0,0,0,0.267776,0.442126,0.256094,0,0.038534,0.11978,0.154491,0.077396,0,0,0,0,0,0,0,0,0.516772,0.912433,1,0.851541,1,1,0.74961,0.163504,0,0.010448,0.175638,0.241067/0,0,0,0,0,0,0.089934,0.25123,0.615351,0.570795,0.108048,0.157618,0.158588,0.080299,0,0,0,0,0,0,0,0,0,0.017866,0.946465,1,0.758796,0.701128,0.974666,1,0.576712,0.224971,0.156541,0.231442,0.215219/0,0,0,0,0,0.032855,0.203171,0.304258,0.585554,0.760452,0.617587,0.18456,0.079614,0,0,0,0,0,0,0,0,0,0,0,0.644697,1,0.796629,0.577199,0.6909,0.899747,0.770706,0.441355,0.294089,0.267313,0.160812/0,0,0,0.00425,0.112114,0.168211,0.195162,0.416615,0.494803,0.757975,0.694011,0.190839,0,0,0,0,0,0,0,0,0,0,0,0,0.205379,0.985495,0.91081,0.663643,0.64014,0.745947,0.726368,0.521054,0.35953,0.263511,0.094553/0,0,0,0.107216,0.165782,0.118461,0.072823,0.139299,0.281464,0.414688,0.596069,0.454714,0,0,0,0,0,0,0,0,0,0,0,0,0,0.57803,0.878393,0.755163,0.66802,0.658221,0.608518,0.472273,0.330257,0.196658,0.034675/0.01126,0,0,0.168121,0.087055,0,0,0,0.195246,0.223493,0.455181,0.574434,0.40844,0,0,0,0,0,0,0,0,0,0,0,0,0.293258,0.627245,0.697653,0.624893,0.554082,0.475399,0.363168,0.241268,0.101869,0/0,0.075698,0.013115,0.175428,0,0,0,0,0.237148,0.323421,0.391774,0.712839,0.689244,0.181861,0,0,0,0,0,0,0,0,0,0,0.009421,0.206791,0.401289,0.503423,0.486628,0.424682,0.338161,0.241271,0.132713,0.024204,0/0,0.220764,0.041674,0.172371,0,0,0,0,0.283406,0.494974,0.505152,0.708552,0.883693,0.823225,0,0,0,0,0,0,0,0,0,0,0.103375,0.222326,0.311175,0.340464,0.326506,0.269133,0.203858,0.121112,0.035405,0,0/0,0,0.590677,0.204565,0,0,0,0,0.190711,0.561427,0.734736,0.764327,0.995626,0.999013,0.71492,0,0,0,0,0,0,0,0.029308,0.113581,0.176494,0.216575,0.222097,0.203085,0.162556,0.124065,0.060564,0.014915,0,0,0/0,0,0.283472,0.327676,0,0,0,0,0,0.617183,0.843862,0.890666,0.848945,1,1,0.485132,0,0,0,0,0,0.078288,0.150487,0.161154,0.117133,0.073739,0.053601,0.037584,0.0193,0,0,0,0,0,0/0,0,0,0.93693,0,0,0,0,0,0.394087,0.899389,1,0.695186,0.712916,0.997919,0.859999,0.297242,0.053908,0.009351,0.057531,0.113188,0.154167,0.093361,0.01823,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0.222385,0.351534,0,0,0,0,0.107241,0.912644,1,0.691431,0.589928,0.76068,0.855652,0.542793,0.255963,0.16545,0.178721,0.16558,0.073936,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0.733331,0,0,0,0,0,0.585583,1,0.809794,0.622517,0.669562,0.739992,0.585206,0.370228,0.26014,0.211454,0.081332,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0.098961,0.404864,0,0,0,0,0.322238,0.804812,0.841666,0.70172,0.654969,0.631223,0.520824,0.374977,0.25236,0.135645,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0.321402,0.243082,0.003137,0,0.020073,0.218971,0.529929,0.701895,0.659687,0.590538,0.51782,0.417185,0.296775,0.165743,0.036405,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0.269316,0.254591,0.152868,0.143901,0.233042,0.38126,0.495095,0.513091,0.45465,0.382309,0.288437,0.17851,0.058382,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0.160392,0.243922,0.248352,0.271807,0.321945,0.354631,0.343023,0.304664,0.23626,0.152162,0.058738,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0.042843,0.132732,0.172686,0.199367,0.200562,0.178633,0.144534,0.094279,0.037272,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0.018762,0.030475,0.027127,0.01079,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0");
    tree.addGenus("Exokernel", "Orbiformes", "Orbidae", "Polyorbinae", "Parorbium");
    tree.addSpecies("Exokernel", "Orbiformes", "Orbidae", "Polyorbinae", "Parorbium", "Dividuus", "R=13;k=bump4();d=gaus(0.184,0.025)*0.1;cells=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.048832,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.006401,0.051697,0,0,0,0,0,0,0.107257,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.009102,0.146486,0.210099,0.166322,0,0,0,0,0,0.08274,0.12952,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.119589,0.270226,0.34656,0.331125,0.226894,0.135945,0.136569,0.108243,0.053494,0.04093,0.481843,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.020552,0,0,0,0,0.051963,0.089958,0.213205,0.381324,0.477519,0.476781,0.371131,0.214031,0.21473,0.215957,0.20152,0.156395,0.701784,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.022903,0,0,0,0,0.286687,0,0,0.086451,0.145293,0.170659,0.190392,0.251003,0.404901,0.491188,0.479479,0.353755,0.110675,0.091315,0.119712,0.18071,0.258663,0.789065,0.139695,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.257912,0,0,0,0,0.399985,0.019882,0.122259,0.205518,0.196169,0.160186,0.127895,0.099756,0.264567,0.352313,0.343953,0.250631,0,0,0,0.011979,0.124129,0.660294,0.677529,0,0/0,0,0,0,0,0,0.067418,0.121391,0.090859,0,0,0,0.008928,0.022649,0.016275,0,0.389619,0,0,0,0,0.40621,0.275203,0.231791,0.187175,0.069083,0.007105,0,0,0.149879,0.2594,0.309493,0.269129,0.157086,0,0,0,0,0.253594,1,0,0/0,0,0,0,0,0.055832,0.229399,0.305167,0.290153,0.197965,0.107305,0.122509,0.145077,0.153575,0.148864,0.125883,0.374815,0.209852,0,0,0,0.243468,0.60191,0.267057,0.059572,0,0,0,0,0.19797,0.331284,0.401633,0.401236,0.325552,0,0,0,0,0,0.921885,0.075069,0/0,0,0,0,0.036071,0.102729,0.362107,0.457484,0.447416,0.359059,0.195134,0.19496,0.173668,0.17141,0.207654,0.233289,0.284387,0.613769,0,0,0,0.047269,0.86575,0.2086,0,0,0,0,0,0.305728,0.46197,0.548361,0.572363,0.509808,0.085894,0,0,0,0,0.600496,0.403467,0/0.090919,0,0,0.082493,0.145763,0.18922,0.424006,0.517275,0.489217,0.367262,0.13407,0.078709,0.048206,0.034896,0.060558,0.157914,0.287997,0.860087,0,0,0,0,0.984451,0.117401,0,0,0,0,0,0.341782,0.586967,0.687916,0.727037,0.694221,0.392205,0,0,0,0,0.3827,0.518213,0/0.367017,0,0.107731,0.184386,0.205737,0.180263,0.342095,0.407509,0.366152,0.239206,0.064394,0,0,0,0,0,0.143137,0.946199,0.245888,0,0,0,1,0.146406,0,0,0,0,0,0.324677,0.716214,0.827434,0.870802,0.859383,0.705742,0.127411,0,0,0,0.306445,0.477601,0/0.540854,0.100172,0.189611,0.199785,0.1181,0.051148,0.165291,0.268062,0.29448,0.24311,0.141036,0,0,0,0,0,0,0.635864,0.705315,0,0,0,0.802473,0.355129,0,0,0,0,0,0.327819,0.84116,0.946375,0.983907,0.978983,0.933873,0.391647,0.019248,0,0.045285,0.304152,0.400272,0.003387/0.629036,0.356905,0.22229,0.089262,0,0,0.09905,0.291833,0.369831,0.373947,0.31226,0,0,0,0,0,0,0.166117,0.924271,0,0,0,0.542365,0.514794,0,0,0,0,0,0.346878,0.945922,1,1,1,1,0.64025,0.22625,0.095686,0.162424,0.328765,0.322693,0.004969/0.49238,0.658233,0.15687,0,0,0,0.065788,0.394459,0.492753,0.51802,0.485663,0.284965,0,0,0,0,0,0,0.787852,0.20373,0,0,0.300414,0.589172,0.016709,0,0,0,0,0.356896,0.963535,1,1,1,1,0.774309,0.401147,0.243443,0.264925,0.34625,0.240584,0/0.266836,0.869419,0.056849,0,0,0,0.057446,0.510395,0.622172,0.670036,0.655497,0.572932,0,0,0,0,0,0,0.553338,0.360736,0,0,0.102294,0.514717,0.251336,0,0,0,0.05143,0.36958,0.849377,1,0.997821,0.961815,0.964692,0.782368,0.505667,0.35676,0.331156,0.329666,0.146694,0/0.010368,0.990422,0.003851,0,0,0,0.067046,0.62277,0.764732,0.820073,0.816728,0.754765,0.248247,0,0,0,0,0,0.409935,0.371264,0,0,0.004045,0.300892,0.372656,0.177201,0.065038,0.063576,0.169227,0.394311,0.713923,0.90164,0.898209,0.871007,0.826882,0.705018,0.520081,0.399145,0.34611,0.261139,0.055868,0/0,0.966647,0.056443,0,0,0,0.076208,0.72793,0.885796,0.954469,0.962434,0.928952,0.559396,0.045218,0,0,0,0.030136,0.349277,0.305578,0.001581,0,0,0.087211,0.289607,0.288018,0.214782,0.201318,0.263738,0.407133,0.585837,0.730085,0.763394,0.737594,0.692099,0.582939,0.461126,0.373592,0.302786,0.151062,0.000506,0/0,0.75462,0.28138,0,0,0,0.094296,0.716714,0.980783,1,1,1,0.842738,0.296178,0.016769,0,0,0.128275,0.327551,0.21334,0,0,0,0,0.100359,0.223677,0.260849,0.272677,0.313824,0.388414,0.485998,0.565048,0.597766,0.585528,0.529761,0.464905,0.386843,0.310572,0.201327,0.049357,0,0/0,0.449382,0.436657,0.008787,0,0,0.147368,0.700501,1,1,1,1,0.973443,0.507624,0.201744,0.096112,0.115784,0.218304,0.290302,0.118118,0,0,0,0,0,0.052605,0.142274,0.214119,0.272377,0.325842,0.38139,0.415383,0.431057,0.426673,0.398734,0.342506,0.284619,0.198151,0.0739,0,0,0/0,0.173217,0.487649,0.191535,0.020296,0.021167,0.214851,0.645647,1,1,1,1,0.930915,0.619578,0.353684,0.239994,0.242529,0.266552,0.205825,0.034603,0,0,0,0,0,0,0,0.051043,0.122803,0.195786,0.248068,0.285635,0.301567,0.294887,0.26306,0.228027,0.15474,0.062682,0,0,0,0/0,0.004489,0.386189,0.339119,0.181528,0.151381,0.273241,0.569581,0.87859,0.950547,0.902714,0.882926,0.800554,0.613828,0.43147,0.347168,0.303275,0.23085,0.077978,0,0,0,0,0,0,0,0,0,0,0.039042,0.089566,0.132002,0.149506,0.14876,0.1283,0.078344,0.032242,0,0,0,0,0/0,0,0.150633,0.36707,0.313948,0.272701,0.32377,0.498249,0.693717,0.784607,0.781091,0.741711,0.67639,0.556248,0.44218,0.357795,0.247931,0.107383,0,0,0,0,0,0,0,0,0,0,0,0,0,0.000417,0.015363,0.015633,0.000308,0,0,0,0,0,0,0/0,0,0,0.201204,0.334691,0.346184,0.367876,0.44482,0.542055,0.613144,0.62533,0.6052,0.540184,0.465509,0.378378,0.270458,0.129159,0.008447,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0.020693,0.180845,0.300461,0.353856,0.389041,0.442198,0.477977,0.48575,0.459477,0.419253,0.345551,0.255714,0.140039,0.026561,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0.015958,0.124718,0.22883,0.292707,0.328331,0.343184,0.344225,0.327311,0.279836,0.217374,0.125147,0.032419,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0.050039,0.122309,0.165829,0.195412,0.196602,0.170442,0.134746,0.067983,0.015193,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0.022222,0.041437,0.045782,0.035762,0.010139,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0");
    tree.addSpecies("Exokernel", "Orbiformes", "Orbidae", "Polyorbinae", "Parorbium", "Dividuus Pedes", "R=13;k=quad4();d=quad4(0.11,0.011)*0.1;cells=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.142254,0.14623,0,0,0,0,0,0,0,0.20463,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.049831,0.283005,0.339918,0.235558,0,0.026248,0.070328,0.095013,0.06678,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.122561,0.377004,0.489109,0.437125,0.075646,0.124326,0.141948,0.106398,0.126928,0.1339,0.029214,0.142353,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.01857,0.434216,0.578938,0.564079,0.306438,0.095862,0.020209,0,0,0.051139,0.151698,0.455202,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.00898,0.068851,0.089743,0.110587,0.396843,0.544106,0.506462,0.292854,0,0,0,0,0,0.004553,0.192902,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.026491,0.108553,0.11508,0.095782,0.079273,0.061153,0.323712,0.332946,0.253921,0,0,0,0,0,0,0.037779,0.583629,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.011349,0,0.113406,0.099732,0.001299,0,0,0,0.228658,0.32582,0.340504,0.04267,0,0,0,0,0,0,0.504755,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.185439,0,0.140996,0.015018,0,0,0,0,0.016009,0.406066,0.442986,0.426247,0,0,0,0,0,0,0,0.15416,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.053828,0,0,0,0,0,0,0.161278,0,0,0,0,0,0,0.469788,0.551705,0.565615,0.336861,0,0,0,0,0,0,0.430033,0/0,0,0,0,0,0,0,0.044253,0.044317,0,0.05745,0.122217,0.131071,0.114958,0.02414,0,0,0,0,0,0,0,0.45645,0.167441,0,0,0,0,0,0,0.54748,0.65881,0.722413,0.692615,0.110322,0,0,0,0,0,0.251608,0/0,0,0,0,0,0,0.041901,0.316005,0.400928,0.327685,0.24717,0.171497,0.127499,0.126384,0.190735,0.240096,0,0,0,0,0,0,0,0.210025,0,0,0,0,0,0,0.591879,0.791494,0.86755,0.892984,0.636616,0,0,0,0,0,0.115158,0.051814/0,0,0,0,0,0.116118,0.274653,0.491142,0.470644,0.301049,0.037351,0,0,0,0,0.02915,0.305319,0.418785,0,0,0,0,0,0.628753,0,0,0,0,0,0,0.474352,0.92862,0.825663,0.872695,0.993502,0.330528,0,0,0,0,0.078675,0.095102/0,0,0,0,0.20635,0.248926,0.196302,0.335209,0.335782,0.215201,0,0,0,0,0,0,0,0.388453,0,0,0,0,0,0.521422,0,0,0,0,0,0,0.290387,1,0.753955,0.618724,0.916857,0.762756,0.020375,0,0,0,0.098405,0.087898/0,0,0,0.214696,0.153311,0.025173,0,0.174297,0.026092,0,0.043349,0,0,0,0,0,0,0.00252,0.558368,0,0,0,0,0,0.219511,0,0,0,0,0,0.095677,0.947707,0.753628,0.5189,0.717192,0.837267,0.307154,0,0,0.000106,0.135127,0.068549/0.076144,0,0.114248,0.164227,0,0,0,0.07031,0.074915,0.115212,0.312218,0,0,0,0,0,0,0,0.575117,0,0,0,0,0,0.446904,0,0,0,0,0,0,0.720195,0.816259,0.611896,0.665757,0.749938,0.451695,0.113211,0.035137,0.088318,0.14737,0.017367/0,0,0.278203,0.004264,0,0,0,0,0.48382,0.661721,0.793508,0.492098,0,0,0,0,0,0,0,0.165123,0,0,0,0,0.104953,0.115909,0,0,0,0,0,0.423851,0.757906,0.694238,0.654914,0.644902,0.464214,0.231688,0.147673,0.165212,0.12446,0/0,0.127175,0.285409,0,0,0,0,0,0.701861,0.927245,0.944437,0.855295,0,0,0,0,0,0,0,0.474491,0,0,0,0,0,0.232479,0.005845,0,0,0,0,0.232419,0.546262,0.616408,0.568344,0.522061,0.407369,0.282402,0.212421,0.166242,0.050866,0/0,0.314339,0.249395,0,0,0,0,0,0.791313,0.970305,1,0.983361,0.805846,0,0,0,0,0,0,0.283752,0,0,0,0,0,0.035803,0.17131,0.035341,0,0,0.004296,0.149587,0.343033,0.434411,0.438326,0.393,0.335935,0.257616,0.177414,0.079758,0,0/0,0,0.246765,0,0,0,0,0,0.556211,1,1,1,0.997125,0.081778,0,0,0,0,0,0.14512,0.002364,0,0,0,0,0,0.05206,0.155066,0.117347,0.072986,0.108777,0.179231,0.268676,0.324198,0.323782,0.277761,0.237389,0.163123,0.07397,0,0,0/0,0,0.554503,0,0,0,0,0,0.202746,1,0.964968,0.824176,1,0.550259,0,0,0,0,0,0.109554,0.026993,0,0,0,0,0,0,0,0.093115,0.15093,0.158955,0.191992,0.218135,0.22278,0.197423,0.158075,0.106906,0.048115,0,0,0,0/0,0,0.75185,0,0,0,0,0,0,1,0.973615,0.713376,0.971052,0.774082,0,0,0,0,0,0.133912,0.006023,0,0,0,0,0,0,0,0,0,0.046127,0.074722,0.080896,0.075247,0.060808,0.036561,0,0,0,0,0,0/0,0,0.172091,0,0,0,0,0,0,0.55924,1,0.85977,0.919923,0.768799,0.038139,0,0,0,0,0.171823,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0.294711,0,0,0,0,0,0.05453,0.765502,0.901245,0.859488,0.673221,0.195422,0,0,0,0.109811,0.117357,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0.277534,0,0,0,0,0,0,0.340781,0.667941,0.694308,0.583432,0.341979,0.157057,0.11265,0.146058,0.170883,0.001136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0.241653,0,0,0,0,0,0.154039,0.450962,0.561724,0.537715,0.442451,0.325386,0.248773,0.200405,0.063196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0.057962,0.172185,0.00271,0,0,0.004169,0.19732,0.405654,0.483664,0.439926,0.364244,0.267616,0.176341,0.061819,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0.060308,0.184953,0.129799,0.108792,0.173315,0.279023,0.339045,0.313032,0.235184,0.162984,0.094617,0.021483,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0.107873,0.172922,0.195981,0.201066,0.164187,0.112726,0.044707,0.006934,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0.005894,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0");
    tree.addSpecies("Exokernel", "Orbiformes", "Orbidae", "Polyorbinae", "Parorbium", "Adhaerens", "R=13;k=bump4();d=gaus(0.23,0.0323)*0.1;cells=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.036813,0.033584,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.012659,0.003041,0,0,0,0.278745,0.153982,0.044016,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.051743,0.123896,0.176959,0.204999,0.210699,0.217904,0.20076,0.134072,0.245326,0.478375,0.30983,0.119478,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.305272,0,0,0,0.035765,0.002551,0.169934,0.246703,0.246607,0.241397,0.251141,0.279554,0.30521,0.319451,0.329545,0.337709,0.388333,0.511591,0.725433,0.941111,0.791419,0.558837,0.344278,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.057132,0.557523,0.173072,0,0,0.13588,0.602592,0.491415,0.413914,0.29231,0.215201,0.182663,0.178245,0.181394,0.187318,0.190615,0.240758,0.236028,0.308205,0.563058,0.979799,1,0.887096,0.630994,0.260738,0/0,0,0,0,0,0,0.012485,0.104651,0.128391,0.009538,0,0,0,0.044864,0.099185,0.149303,0.194547,0.447283,0.488328,0,0,0.262007,0.879772,0.601854,0.229255,0.039634,0,0,0,0,0.00192,0.000344,0.087794,0.03452,0.010477,0.122389,0.25691,0.634051,0.975536,0.935958,0.692372,0.062135/0,0,0.090976,0.170265,0.238536,0.217456,0.207717,0.273738,0.310994,0.217573,0.14511,0.133358,0.152575,0.186492,0.221252,0.255237,0.296015,0.335808,0.729643,0.314493,0,0.418497,0.986839,0.462397,0.013702,0,0,0,0,0,0,0.138751,0.177279,0.106222,0.020467,0,0,0.079954,0.505512,1,0.945483,0.425198/0,0.022106,0.303681,0.263645,0.236722,0.260682,0.263234,0.262365,0.300343,0.289328,0.23795,0.216291,0.205544,0.168808,0.14444,0.158754,0.245865,0.369918,0.916525,0.598727,0,0.596684,1,0.22663,0,0,0,0,0,0,0.141905,0.379887,0.407201,0.322681,0.189291,0,0,0,0.109113,0.68348,1,0.742973/0,0.280595,0.503961,0.37084,0.340555,0.274399,0.185566,0.126196,0.097265,0.09273,0.09603,0.078419,0.045751,0,0,0,0.045496,0.239227,1,0.814321,0.152722,0.657354,1,0.158426,0,0,0,0,0,0,0.43094,0.589089,0.619686,0.560017,0.430258,0,0,0,0.001671,0.350171,1,0.874535/0.068147,0.525185,0.623611,0.450728,0.275055,0.099254,0.000845,0,0,0,0,0,0,0,0,0,0,0.034878,0.885357,0.965119,0.539497,0.742471,1,0.378811,0,0,0,0,0,0,0.614129,0.756624,0.79559,0.766978,0.67893,0,0,0,0,0.281484,1,0.743027/0.28762,0.747029,0.719347,0.381458,0.110431,0,0,0,0,0.042882,0.06111,0,0,0,0,0,0,0,0.303207,1,0.881136,0.808922,1,0.64666,0,0,0,0,0,0.176004,0.768997,0.901611,0.952464,0.945245,0.893525,0.294943,0,0,0,0.507756,1,0.395083/0.484191,0.901935,0.860642,0.221829,0.00805,0,0,0,0.112719,0.202344,0.230925,0.176596,0.022529,0,0,0,0,0,0,1,1,0.83656,1,0.859461,0,0,0,0,0,0.545526,0.893874,1,1,1,1,0.831195,0.163233,0,0.253466,0.900953,1,0.068485/0.257122,0.980344,1,0.093248,0,0,0,0.158146,0.293621,0.386503,0.418834,0.372206,0.229291,0,0,0,0,0,0,1,1,0.828747,1,0.980276,0,0,0,0,0,0.74985,0.984851,1,0.832911,1,1,1,0.821137,0.622288,0.828871,1,0.458533,0.002521/0,1,1,0.126272,0,0,0,0.365571,0.492975,0.589727,0.626654,0.575905,0.422768,0.001447,0,0,0,0,0,0.69539,1,0.785981,0.919433,1,0.306562,0,0,0,0.079448,0.702871,1,0.867943,0.577534,0.769949,1,1,1,1,0.929023,0.565917,0.112145,0/0,1,1,0.801424,0.052976,0,0.342938,0.585172,0.707962,0.817492,0.773752,0.78315,0.61868,0.155368,0,0,0,0,0,0.498377,0.976299,0.696047,0.689562,0.881369,0.572594,0.110241,0,0,0.129047,0.545967,0.915716,0.696496,0.431173,0.510943,0.811033,1,0.954069,0.765519,0.489509,0.193489,0.01337,0/0.021723,0.605149,1,0.939509,0.687426,0.573705,0.681022,0.799735,0.916892,0.990672,1,0.986988,0.84106,0.310006,0,0,0,0,0,0.410576,0.825814,0.575062,0.47149,0.642473,0.640248,0.359749,0.160877,0.122559,0.236407,0.495388,0.73119,0.664308,0.489466,0.468257,0.566218,0.617522,0.546824,0.393888,0.205913,0.043581,0,0/0.067627,0.482501,0.721979,0.683013,0.647611,0.708817,0.858841,0.959653,1,1,1,1,0.997878,0.479852,0.022202,0,0,0,0,0.396714,0.664695,0.418832,0.275601,0.383773,0.508786,0.447869,0.331425,0.293497,0.35289,0.48804,0.601992,0.601252,0.538957,0.497446,0.473035,0.421581,0.325873,0.192717,0.06704,0,0,0/0.075385,0.407612,0.581766,0.530488,0.481534,0.550021,0.784713,1,1,1,1,1,1,0.639289,0.173715,0,0,0,0.112492,0.408715,0.489561,0.243146,0.117063,0.169674,0.289858,0.358778,0.351759,0.341019,0.369486,0.41648,0.449441,0.454822,0.442389,0.415307,0.358721,0.277705,0.17805,0.074114,0.002641,0,0,0/0.05095,0.333045,0.502054,0.477857,0.424093,0.471162,0.645699,0.917903,1,1,1,1,1,0.701557,0.344058,0.143542,0.081441,0.121485,0.250575,0.39141,0.290277,0.087329,0.018413,0.034356,0.094275,0.16188,0.199202,0.210463,0.21078,0.208713,0.218808,0.238866,0.250915,0.240681,0.19362,0.128303,0.052848,0,0,0,0,0/0.005117,0.232849,0.428354,0.448702,0.398624,0.402382,0.499739,0.68108,0.878368,0.983857,1,0.968599,0.862806,0.672964,0.469626,0.329855,0.272056,0.279747,0.314365,0.256523,0.09523,0.002245,0,0,0,0.009596,0.019834,0.020402,0.016553,0.015441,0.02133,0.032184,0.047619,0.049294,0.033739,0.009253,0,0,0,0,0,0/0,0.099787,0.321891,0.410976,0.3817,0.349362,0.381871,0.478443,0.609232,0.719397,0.766889,0.757565,0.687269,0.586598,0.479206,0.388487,0.31917,0.255658,0.165023,0.051406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0.163535,0.329083,0.365775,0.343292,0.332164,0.365159,0.432126,0.517678,0.570488,0.583464,0.534019,0.455495,0.350864,0.238069,0.130028,0.047717,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0.011965,0.158441,0.29206,0.327052,0.328618,0.333538,0.3705,0.416853,0.446918,0.435532,0.375422,0.269776,0.142276,0.036094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0.098194,0.210272,0.266398,0.302135,0.319543,0.329918,0.319387,0.263951,0.175657,0.070236,0.001958,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0.014382,0.067384,0.121893,0.143146,0.139842,0.113118,0.060882,0.012675,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0");
    // Polyorbinae Triorbium needs a bigger space or it will die
    tree.addSpecies("Exokernel", "Orbiformes", "Orbidae", "Polyorbinae", "Triorbium", "R=26;k=bump4();d=gaus(0.114,0.0115)*0.1;cells=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.042304,0.038614,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.068497,0.115377,0.123811,0.084631,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.026512,0.126681,0.188386,0.206381,0.181437,0.109762,0,0,0,0,0,0.002216,0.010554,0.000354,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.064933,0.178261,0.262729,0.290274,0.27814,0.216602,0.110914,0.020268,0.035997,0.057132,0.077556,0.08421,0.084822,0.083778,0.077944,0.049312,0.007822,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.110638,0.238896,0.319803,0.37318,0.371704,0.320328,0.226078,0.085532,0.111615,0.117052,0.137335,0.14633,0.146489,0.146078,0.14513,0.127197,0.098352,0.042828,0,0,0.168637,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.004845,0.143835,0.281897,0.379092,0.437871,0.453789,0.414244,0.330823,0.15279,0.161563,0.167203,0.153325,0.155534,0.148292,0.144889,0.151084,0.155184,0.161449,0.129619,0.0672,0,0.141806,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.010581,0.035902,0.055842,0.073784,0.183324,0.326296,0.438443,0.495166,0.517644,0.488214,0.409875,0.271104,0.170901,0.157958,0.127036,0.09157,0.077537,0.069501,0.074707,0.09142,0.141248,0.168423,0.155185,0.071252,0,0.057142,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.030496,0.060519,0.080918,0.09826,0.116685,0.132568,0.19477,0.352969,0.461757,0.533851,0.553522,0.524941,0.443893,0.294261,0.137155,0.087011,0.057199,0.021458,0,0,0,0,0.044614,0.102556,0.175911,0.17044,0.067763,0.387367,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.052399,0.090843,0.126706,0.143966,0.153887,0.162254,0.171,0.179697,0.332321,0.446311,0.520115,0.534988,0.503418,0.421198,0.271825,0.064308,0.025777,0,0,0,0,0,0,0,0.001964,0.085849,0.198025,0.177681,0.46207,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.063821,0.116432,0.134004,0.14837,0.151242,0.145397,0.140464,0.138987,0.139577,0.24705,0.369482,0.435929,0.469786,0.442301,0.371572,0.239538,0.066691,0,0,0,0,0,0,0,0,0,0,0.095406,0.215723,0.355778,0.090534,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.066233,0.123759,0.138588,0.142412,0.104309,0.08653,0.071341,0.061301,0.056956,0.05601,0.126163,0.25301,0.340789,0.383192,0.387102,0.337073,0.236251,0.105376,0,0,0,0,0,0,0,0,0,0,0,0.142584,0.252114,0.533374,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.036312,0.105753,0.140014,0.131333,0.08341,0.039726,0.00376,0,0,0,0,0.023406,0.177287,0.277015,0.332883,0.356403,0.336484,0.271915,0.177767,0,0,0,0,0,0,0,0,0,0,0,0.01332,0.216118,0.728802,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.097477,0,0,0.082254,0.157884,0.144786,0.075212,0.004697,0,0,0,0,0,0,0,0.14122,0.254791,0.334637,0.368606,0.370929,0.334183,0.26795,0.092052,0,0,0,0,0,0,0,0,0,0,0,0.063785,0.613296,0.094026,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.012428,0.138742,0.16054,0.09046,0.002293,0,0,0,0,0,0,0,0,0.157677,0.283028,0.364155,0.413741,0.428747,0.411025,0.362698,0.268762,0,0,0,0,0,0,0,0,0,0,0,0,0.239138,0.579841,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.020074,0.066582,0.058002,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.161997,0.052563,0.176576,0.156821,0.04086,0,0,0,0,0,0,0,0,0,0.186652,0.31445,0.407501,0.478319,0.500261,0.495397,0.45777,0.376674,0,0,0,0,0,0,0,0,0,0,0,0,0.03142,0.798709,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.079116,0.135467,0.144903,0.098625,0.013788,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.368408,0.085668,0.199791,0.120688,0,0,0,0,0,0,0,0,0,0,0.158091,0.365884,0.469539,0.532713,0.576944,0.580555,0.55236,0.483586,0.210838,0,0,0,0,0,0,0,0,0,0,0,0,0.604127,0.076274,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.025744,0.145037,0.203157,0.224583,0.195644,0.125223,0.001071,0,0,0,0.0081,0.03562,0.048089,0.053111,0.05491,0.049076,0.014022,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.358648,0.122075,0.213445,0.079653,0,0,0,0,0,0,0,0,0,0,0.016904,0.404179,0.517533,0.594286,0.643122,0.663093,0.641613,0.586759,0.489545,0,0,0,0,0,0,0,0,0,0,0,0,0.203918,0.459265,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.062532,0.190169,0.271892,0.300816,0.286445,0.231027,0.122249,0.024463,0.035584,0.071316,0.084774,0.098246,0.116689,0.123971,0.126338,0.122185,0.096431,0.078929,0.026289,0,0,0.050022,0,0,0,0,0,0,0,0,0,0.124722,0.267619,0.223323,0.054284,0,0,0,0,0,0,0,0,0,0,0,0.452191,0.573636,0.663422,0.707593,0.733483,0.725481,0.684866,0.602372,0.023453,0,0,0,0,0,0,0,0,0,0,0,0,0.605845,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.106467,0.242394,0.335813,0.379549,0.377327,0.335922,0.236159,0.096863,0.118689,0.127438,0.146594,0.142908,0.145302,0.149303,0.150101,0.151136,0.148355,0.151973,0.120766,0.054154,0,0.256393,0,0,0,0,0,0,0,0,0,0,0.5423,0.234885,0.031568,0,0,0,0,0,0,0,0,0,0,0,0.488669,0.623003,0.714514,0.776019,0.803308,0.805381,0.778441,0.709822,0.323096,0,0,0,0,0,0,0,0,0,0,0,0,0.491578,0.016016,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.005747,0.132714,0.284995,0.388399,0.455819,0.466219,0.43278,0.341356,0.207433,0.168637,0.164163,0.156716,0.142128,0.111419,0.094429,0.090036,0.093283,0.118561,0.159071,0.179605,0.142675,0.054308,0.237549,0,0,0,0,0,0,0,0,0,0,0.665735,0.251958,0.015407,0,0,0,0,0,0,0,0,0,0,0,0.370494,0.672651,0.77298,0.842231,0.871777,0.879891,0.865425,0.811125,0.622316,0,0,0,0,0,0,0,0,0,0,0,0,0.294208,0.197152,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.009669,0.036453,0.057852,0.077016,0.161413,0.324701,0.44485,0.509042,0.535013,0.503584,0.417733,0.281527,0.164682,0.148538,0.102246,0.074867,0.043375,0.015566,0.00084,0.003879,0.02862,0.073034,0.145577,0.19796,0.163785,0.091546,0.121315,0,0,0,0,0,0,0,0,0,0.563939,0.275568,0.006487,0,0,0,0,0,0,0,0,0,0,0,0.213144,0.714111,0.8271,0.891884,0.939756,0.948211,0.943433,0.901559,0.823258,0.135783,0,0,0,0,0,0,0,0,0,0,0,0.139624,0.302747,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.03011,0.060098,0.080568,0.098045,0.117954,0.134576,0.152466,0.340946,0.4649,0.539016,0.56078,0.529508,0.441058,0.296786,0.122331,0.077344,0.03905,0,0,0,0,0,0,0,0.038595,0.142221,0.214334,0.156222,0.458032,0,0,0,0,0,0,0,0,0,0.25277,0.525486,0.00457,0,0,0,0,0,0,0,0,0,0,0,0.057696,0.760555,0.872833,0.946665,0.978672,0.997947,0.996277,0.972261,0.9229,0.445694,0,0,0,0,0,0,0,0,0,0,0,0.067698,0.318723,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.054191,0.088601,0.125036,0.142586,0.152269,0.160114,0.168725,0.177878,0.315703,0.438854,0.520282,0.533417,0.499082,0.410504,0.265738,0.053388,0.010868,0,0,0,0,0,0,0,0,0,0.025741,0.163032,0.233289,0.556255,0,0,0,0,0,0,0,0,0,0,0.758097,0.009534,0,0,0,0,0,0,0,0,0,0,0,0,0.730532,0.91878,0.983346,1,1,1,1,0.992226,0.734529,0,0,0,0,0,0,0,0,0,0,0,0.032085,0.290086,0.005652/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.00119,0.067422,0.116236,0.135708,0.147432,0.15109,0.144509,0.137816,0.134834,0.134976,0.21212,0.348261,0.427424,0.463248,0.434296,0.359771,0.234471,0.070885,0,0,0,0,0,0,0,0,0,0,0,0.039542,0.218632,0.449,0.146575,0,0,0,0,0,0,0,0,0,0.807986,0.021533,0,0,0,0,0,0,0,0,0,0,0,0,0.583159,0.953563,1,1,1,1,1,1,0.967068,0.25467,0,0,0,0,0,0,0,0,0,0,0.012578,0.25095,0.031284/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.066206,0.123775,0.137464,0.145861,0.109172,0.088171,0.072258,0.060414,0.054426,0.05282,0.080515,0.230063,0.330065,0.37851,0.378743,0.330473,0.237168,0.118118,0,0,0,0,0,0,0,0,0,0,0,0,0.077032,0.276774,0.578943,0,0,0,0,0,0,0,0,0,0.615,0.106178,0,0,0,0,0,0,0,0,0,0,0,0,0.417207,0.977495,1,1,0.976345,0.957149,1,1,1,0.510637,0,0,0,0,0,0,0,0,0,0,0.032063,0.216035,0.044727/0,0,0,0,0,0,0,0,0,0,0,0,0.007866,0.067374,0.069255,0.03921,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.055113,0,0,0.038761,0.112702,0.149442,0.139479,0.086939,0.04472,0.007303,0,0,0,0,0,0.1428,0.261716,0.32709,0.355888,0.339275,0.276142,0.191713,0,0,0,0,0,0,0,0,0,0,0,0,0,0.179338,0.781752,0,0,0,0,0,0,0,0,0,0.288255,0.408137,0,0,0,0,0,0,0,0,0,0,0,0,0.255057,0.997497,1,1,0.932036,0.8732,0.968011,1,1,0.721344,0.099294,0,0,0,0,0,0,0,0,0,0.044711,0.205359,0.046739/0,0,0,0,0,0,0,0,0,0,0,0,0.071065,0.133858,0.159767,0.135938,0.067552,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.085558,0.158264,0.154245,0.081622,0.013018,0,0,0,0,0,0,0,0.115376,0.240293,0.330979,0.370522,0.376951,0.341976,0.280541,0.176563,0,0,0,0,0,0,0,0,0,0,0,0,0.032625,0.65825,0.143482,0,0,0,0,0,0,0,0,0,0.593199,0,0,0,0,0,0,0,0,0,0,0,0,0.119064,0.850702,1,1,0.908625,0.822638,0.877945,1,1,0.846548,0.297179,0,0,0,0,0,0,0,0,0,0.075594,0.188871,0.038324/0,0,0,0,0,0,0,0,0,0,0,0.00656,0.130026,0.202613,0.235444,0.224056,0.16892,0.084233,0,0,0.0106,0.033465,0.052349,0.058488,0.057829,0.053362,0.042205,0.009419,0,0,0,0,0.070998,0,0,0,0,0,0,0,0,0,0,0,0.098554,0.011378,0.122106,0.177057,0.10118,0.015039,0,0,0,0,0,0,0,0,0.119606,0.263307,0.359021,0.41661,0.435742,0.419884,0.375463,0.284898,0,0,0,0,0,0,0,0,0,0,0,0,0,0.247936,0.589463,0,0,0,0,0,0,0,0,0,0.559789,0,0,0,0,0,0,0,0,0,0,0,0,0.008648,0.674518,1,1,0.905251,0.800455,0.821063,0.932612,1,0.88992,0.464462,0.022346,0,0,0,0,0,0,0,0,0.104371,0.166938,0.020054/0,0,0,0,0,0,0,0,0,0,0,0.042454,0.179094,0.275539,0.312424,0.31124,0.268265,0.191575,0.052541,0.062101,0.088594,0.0953,0.118655,0.129829,0.13165,0.129061,0.120354,0.092025,0.072937,0.028127,0,0,0.153715,0,0,0,0,0,0,0,0,0,0,0,0.301341,0.047173,0.167083,0.16774,0.057898,0,0,0,0,0,0,0,0,0,0.09577,0.295505,0.403164,0.479297,0.503959,0.501204,0.470622,0.392216,0.07257,0,0,0,0,0,0,0,0,0,0,0,0,0.012452,0.784747,0,0,0,0,0,0,0,0,0,0.352741,0.211057,0,0,0,0,0,0,0,0,0,0,0,0,0.498435,0.976343,1,0.914857,0.80116,0.789534,0.866739,0.949188,0.877895,0.570857,0.176757,0,0,0,0,0,0,0,0.019625,0.13179,0.15044,0/0,0,0,0,0,0,0,0,0,0,0,0.076477,0.234795,0.332929,0.389594,0.396635,0.36464,0.29576,0.180298,0.128543,0.146791,0.15639,0.145834,0.153687,0.152928,0.151823,0.151362,0.140222,0.147337,0.115845,0.064908,0,0.058068,0,0,0,0,0,0,0,0,0,0,0,0.309367,0.078735,0.200082,0.152254,0.006087,0,0,0,0,0,0,0,0,0,0,0.339279,0.461629,0.532003,0.579969,0.585966,0.566597,0.496647,0.369501,0,0,0,0,0,0,0,0,0,0,0,0,0,0.606049,0.107652,0,0,0,0,0,0,0,0,0.107729,0.358654,0,0,0,0,0,0,0,0,0,0,0,0,0.34502,0.819216,0.985009,0.913892,0.812622,0.775323,0.813781,0.878726,0.847035,0.61892,0.299175,0.039095,0,0,0,0,0,0,0.077059,0.154622,0.102716,0/0,0,0,0,0,0,0,0,0,0.003147,0.024721,0.108885,0.269843,0.386706,0.461782,0.476902,0.452421,0.387578,0.274566,0.176606,0.161388,0.157761,0.132593,0.098427,0.089453,0.086523,0.091467,0.110322,0.151084,0.165793,0.150733,0.080463,0,0.206086,0,0,0,0,0,0,0,0,0,0,0.075478,0.232692,0.224116,0.118585,0,0,0,0,0,0,0,0,0,0,0,0.380474,0.503753,0.592489,0.648534,0.670666,0.656053,0.599876,0.509353,0,0,0,0,0,0,0,0,0,0,0,0,0,0.250327,0.435422,0,0,0,0,0,0,0,0,0,0.341242,0.083759,0,0,0,0,0,0,0,0,0,0,0,0.223989,0.656495,0.887486,0.886947,0.811423,0.766354,0.774557,0.808828,0.794983,0.641606,0.382394,0.156407,0.006568,0,0,0,0,0.051403,0.117667,0.155918,0.066612,0/0,0,0,0,0,0,0,0.022103,0.052699,0.075749,0.096033,0.115749,0.311163,0.438909,0.506665,0.541615,0.51821,0.445697,0.327316,0.165472,0.136675,0.087998,0.059912,0.028763,0.005366,0,0,0.021815,0.063577,0.11784,0.175522,0.175994,0.089433,0.426443,0,0,0,0,0,0,0,0,0,0,0,0.512201,0.242901,0.082326,0,0,0,0,0,0,0,0,0,0,0,0.41509,0.562077,0.659554,0.711892,0.743997,0.739327,0.69801,0.623337,0.206661,0,0,0,0,0,0,0,0,0,0,0,0,0,0.564102,0,0,0,0,0,0,0,0,0,0.194613,0.22365,0,0,0,0,0,0,0,0,0,0,0,0.151376,0.516494,0.769706,0.828132,0.787759,0.745054,0.736969,0.747546,0.730222,0.630264,0.43862,0.244964,0.112665,0.038472,0.017362,0.028911,0.052798,0.102713,0.151393,0.131563,0.017668,0/0,0,0,0,0,0.018906,0.066377,0.088553,0.109766,0.131735,0.148306,0.162799,0.311288,0.444144,0.524235,0.551823,0.530064,0.450553,0.323883,0.143148,0.0637,0.021991,0,0,0,0,0,0,0,0.016256,0.091004,0.196906,0.191483,0.4242,0,0,0,0,0,0,0,0,0,0,0,0.632813,0.2596,0.065054,0,0,0,0,0,0,0,0,0,0,0,0.344124,0.600908,0.708136,0.778395,0.811772,0.817605,0.790596,0.731357,0.500839,0,0,0,0,0,0,0,0,0,0,0,0,0,0.475627,0.023583,0,0,0,0,0,0,0,0,0.03549,0.249812,0.092024,0,0,0,0,0,0,0,0,0,0,0.115935,0.409874,0.654909,0.75244,0.739541,0.705554,0.689015,0.686645,0.664553,0.591217,0.462836,0.307277,0.194768,0.121161,0.098371,0.08897,0.121453,0.152772,0.156239,0.080739,0,0/0,0,0,0,0.027486,0.081703,0.123782,0.145707,0.15158,0.15464,0.159649,0.166349,0.269403,0.407779,0.493274,0.510732,0.485013,0.406859,0.284725,0.116973,0,0,0,0,0,0,0,0,0,0,0,0.097925,0.219045,0.274431,0.269461,0,0,0,0,0,0,0,0,0,0,0.513423,0.280658,0.053431,0,0,0,0,0,0,0,0,0,0,0,0.194919,0.650404,0.76664,0.844327,0.880448,0.892463,0.878334,0.832243,0.737806,0.015099,0,0,0,0,0,0,0,0,0,0,0,0,0.323159,0.167512,0,0,0,0,0,0,0,0,0,0.150808,0.19213,0.030435,0,0,0,0,0,0,0,0,0,0.107002,0.335531,0.548962,0.663345,0.679452,0.651388,0.625857,0.616023,0.59672,0.540914,0.452744,0.348548,0.247755,0.195449,0.156476,0.15899,0.165208,0.156644,0.11437,0.025787,0,0/0,0,0,0.012951,0.087834,0.138613,0.142647,0.152641,0.140721,0.127726,0.120594,0.118506,0.136046,0.306367,0.396386,0.435624,0.415981,0.353877,0.255842,0.120451,0,0,0,0,0,0,0,0,0,0,0,0,0.140184,0.257066,0.617002,0,0,0,0,0,0,0,0,0,0,0.217642,0.564342,0.047352,0,0,0,0,0,0,0,0,0,0,0,0.037515,0.686745,0.813446,0.894887,0.945662,0.956965,0.952788,0.92323,0.851276,0.31685,0,0,0,0,0,0,0,0,0,0,0,0,0.198778,0.258041,0,0,0,0,0,0,0,0,0,0.024908,0.177915,0.137082,0.0164,0,0,0,0,0,0,0,0,0.114566,0.288259,0.460394,0.569727,0.601613,0.587017,0.559962,0.53696,0.520851,0.485222,0.420232,0.354321,0.286245,0.234816,0.206529,0.190574,0.167549,0.138327,0.062389,0,0,0/0,0,0,0.071022,0.137954,0.150909,0.133343,0.091409,0.069846,0.052774,0.043993,0.041245,0.040731,0.197517,0.304756,0.363447,0.366374,0.330383,0.26533,0.165301,0.012431,0,0,0,0,0,0,0,0,0,0,0,0.01522,0.211482,0.715104,0,0,0,0,0,0,0,0,0,0,0,0.780875,0.04738,0,0,0,0,0,0,0,0,0,0,0,0,0.708571,0.864216,0.948833,0.986854,1,1,0.987276,0.946239,0.621247,0,0,0,0,0,0,0,0,0,0,0,0,0.11814,0.277888,0,0,0,0,0,0,0,0,0,0,0.06689,0.167106,0.118949,0.041334,0,0,0,0,0,0,0.03458,0.132302,0.2614,0.391894,0.482659,0.517157,0.511089,0.488886,0.464083,0.440118,0.418317,0.379887,0.325603,0.287023,0.241159,0.214989,0.176344,0.144796,0.076272,0,0,0,0/0,0,0.019431,0.117134,0.153662,0.128687,0.070913,0.020189,0,0,0,0,0,0.115529,0.246546,0.320265,0.361851,0.349495,0.312546,0.237962,0.14175,0,0,0,0,0,0,0,0,0,0,0,0,0.063285,0.540058,0.279364,0,0,0,0,0,0,0,0,0,0,0.802511,0.053508,0,0,0,0,0,0,0,0,0,0,0,0,0.573957,0.901928,0.983564,1,1,1,1,1,0.893224,0.131831,0,0,0,0,0,0,0,0,0,0,0,0.081166,0.256911,0,0,0,0,0,0,0,0,0,0,0,0.081539,0.159304,0.131315,0.064545,0.030302,0,0,0.011138,0.03721,0.08365,0.158595,0.254158,0.345776,0.408221,0.434227,0.430935,0.412603,0.39048,0.366525,0.341641,0.319957,0.286112,0.248256,0.218601,0.174274,0.138521,0.076657,0.015057,0,0,0,0/0,0,0.068363,0.154205,0.153693,0.071724,0,0,0,0,0,0,0,0.095049,0.233146,0.329172,0.378975,0.399408,0.37898,0.323419,0.249169,0,0,0,0,0,0,0,0,0,0,0,0,0,0.185741,0.68992,0,0,0,0,0,0,0,0,0,0,0.613614,0.18345,0,0,0,0,0,0,0,0,0,0,0,0,0.417296,0.943957,1,1,0.996623,1,1,1,1,0.409448,0,0,0,0,0,0,0,0,0,0,0,0.074696,0.23815,0.013547,0,0,0,0,0,0,0,0,0,0,0,0.079047,0.151724,0.13827,0.112798,0.07722,0.077797,0.082361,0.096981,0.135147,0.192695,0.256702,0.31504,0.352871,0.363001,0.349842,0.332509,0.313139,0.292808,0.269018,0.245729,0.224718,0.190626,0.15879,0.117573,0.067855,0.017329,0,0,0,0,0/0.170935,0,0.106234,0.177131,0.100588,0.005936,0,0,0,0,0,0,0,0.01981,0.256101,0.361899,0.422652,0.452735,0.449183,0.411788,0.355188,0.11988,0,0,0,0,0,0,0,0,0,0,0,0,0.030845,0.805413,0,0,0,0,0,0,0,0,0,0,0.284974,0.459884,0,0,0,0,0,0,0,0,0,0,0,0,0.257926,0.963814,1,1,0.959395,0.904063,1,1,1,0.653411,0,0,0,0,0,0,0,0,0,0,0,0.067284,0.216466,0.019909,0,0,0,0,0,0,0,0,0,0,0,0,0.060397,0.121857,0.150403,0.140499,0.143035,0.140953,0.14647,0.178054,0.213608,0.250103,0.280489,0.296855,0.295671,0.279738,0.255157,0.23386,0.216651,0.197307,0.172006,0.149116,0.124122,0.082181,0.051313,0.009095,0,0,0,0,0,0/0.286572,0,0.138585,0.166176,0.059304,0,0,0,0,0,0,0,0,0,0.289987,0.40358,0.484158,0.517241,0.524561,0.501111,0.456606,0.364029,0,0,0,0,0,0,0,0,0,0,0,0,0,0.550853,0.229456,0,0,0,0,0,0,0,0,0,0,0.628087,0,0,0,0,0,0,0,0,0,0,0,0,0.108521,0.888113,1,1,0.931799,0.838638,0.913765,1,1,0.839853,0.206358,0,0,0,0,0,0,0,0,0,0,0.093971,0.187622,0.015341,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02319,0.083131,0.123967,0.152519,0.157538,0.170031,0.190195,0.207972,0.223088,0.23274,0.23358,0.224426,0.207143,0.185044,0.160594,0.139556,0.124397,0.104762,0.076791,0.053645,0.02911,0,0,0,0,0,0,0,0/0.155526,0.034181,0.174996,0.159535,0.010159,0,0,0,0,0,0,0,0,0,0.326482,0.459364,0.539602,0.588264,0.602011,0.589485,0.554562,0.472208,0,0,0,0,0,0,0,0,0,0,0,0,0,0.144962,0.56717,0,0,0,0,0,0,0,0,0,0,0.601052,0,0,0,0,0,0,0,0,0,0,0,0,0,0.723362,1,1,0.922315,0.806327,0.84074,0.987102,1,0.932353,0.403403,0,0,0,0,0,0,0,0,0,0,0.108425,0.167051,0.00078,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.031625,0.073539,0.093897,0.127378,0.147694,0.158668,0.163469,0.163003,0.15714,0.146179,0.131346,0.114178,0.095602,0.075336,0.054488,0.042743,0.026456,0.003967,0,0,0,0,0,0,0,0,0/0,0.314336,0.202357,0.132974,0,0,0,0,0,0,0,0,0,0,0.366699,0.501151,0.596053,0.661238,0.681091,0.67709,0.64809,0.57694,0.221589,0,0,0,0,0,0,0,0,0,0,0,0,0,0.633368,0,0,0,0,0,0,0,0,0,0,0.391084,0.195899,0,0,0,0,0,0,0,0,0,0,0,0,0.55103,1,1,0.930089,0.800978,0.801729,0.908411,1,0.945086,0.553815,0.088094,0,0,0,0,0,0,0,0,0.013744,0.139178,0.138456,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.008907,0.039891,0.060372,0.071469,0.075742,0.075264,0.071347,0.064903,0.056723,0.047446,0.037343,0.026143,0.01308,0,0,0,0,0,0,0,0,0,0,0,0/0,0.536912,0.223791,0.100709,0,0,0,0,0,0,0,0,0,0,0.233596,0.553599,0.661217,0.71917,0.761473,0.763725,0.737943,0.679337,0.511951,0,0,0,0,0,0,0,0,0,0,0,0,0,0.466695,0.103004,0,0,0,0,0,0,0,0,0,0.140946,0.367664,0,0,0,0,0,0,0,0,0,0,0,0,0.390605,0.925968,1,0.945011,0.814983,0.781741,0.851121,0.947329,0.916743,0.638438,0.237949,0,0,0,0,0,0,0,0,0.061132,0.151079,0.088744,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.005305,0.012176,0.013848,0.011588,0.006461,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0.558391,0.241906,0.075662,0,0,0,0,0,0,0,0,0,0,0.085135,0.591913,0.70708,0.782432,0.823835,0.840373,0.823252,0.77851,0.69394,0.028756,0,0,0,0,0,0,0,0,0,0,0,0,0.253503,0.289341,0,0,0,0,0,0,0,0,0,0,0.382402,0.040757,0,0,0,0,0,0,0,0,0,0,0,0.256661,0.759186,0.98823,0.94004,0.830838,0.779375,0.803888,0.875226,0.87055,0.67272,0.351275,0.074456,0,0,0,0,0,0,0.025104,0.108612,0.154423,0.053976,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0.357253,0.34568,0.064973,0,0,0,0,0,0,0,0,0,0,0,0.63146,0.764654,0.847959,0.886374,0.906083,0.900479,0.870481,0.802131,0.329879,0,0,0,0,0,0,0,0,0,0,0,0,0.102794,0.365161,0,0,0,0,0,0,0,0,0,0,0.237919,0.205059,0,0,0,0,0,0,0,0,0,0,0,0.156021,0.594713,0.874069,0.902936,0.828046,0.773159,0.773818,0.806369,0.809663,0.679452,0.420766,0.18448,0.023212,0,0,0,0,0.010087,0.073191,0.139323,0.120794,0.003541,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0.002075,0.624507,0.05912,0,0,0,0,0,0,0,0,0,0,0,0.599201,0.806402,0.894623,0.947147,0.962679,0.963983,0.949366,0.899793,0.620498,0,0,0,0,0,0,0,0,0,0,0,0,0.021541,0.344589,0,0,0,0,0,0,0,0,0,0,0.071504,0.273838,0.048615,0,0,0,0,0,0,0,0,0,0,0.103201,0.463053,0.747751,0.832994,0.800135,0.752581,0.738724,0.749911,0.737596,0.653541,0.470242,0.264686,0.124167,0.036866,0.0149,0.014341,0.032197,0.081621,0.133311,0.151297,0.074451,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0.787533,0.059138,0,0,0,0,0,0,0,0,0,0,0,0.452772,0.858149,0.946811,0.988036,1,1,1,0.974295,0.898276,0.133912,0,0,0,0,0,0,0,0,0,0,0,0,0.298203,0.033795,0,0,0,0,0,0,0,0,0,0,0.19856,0.173163,0,0,0,0,0,0,0,0,0,0,0.081879,0.366014,0.627884,0.749838,0.748543,0.710258,0.690251,0.687758,0.672252,0.604278,0.482901,0.326842,0.202917,0.125935,0.091508,0.083097,0.108225,0.135682,0.146651,0.108146,0.01525,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0.734822,0.073348,0,0,0,0,0,0,0,0,0,0,0,0.294577,0.889003,0.978495,1,1,1,1,1,0.984778,0.424879,0,0,0,0,0,0,0,0,0,0,0,0,0.255468,0.069308,0,0,0,0,0,0,0,0,0,0,0.055361,0.213198,0.106141,0,0,0,0,0,0,0,0,0,0.080842,0.29976,0.520905,0.652844,0.681058,0.656376,0.626602,0.616833,0.601589,0.553098,0.466275,0.362995,0.257451,0.197241,0.15403,0.15372,0.155043,0.160208,0.139513,0.060195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0.457354,0.265962,0,0,0,0,0,0,0,0,0,0,0,0.147498,0.921686,1,1,1,0.990603,1,1,1,0.695967,0,0,0,0,0,0,0,0,0,0,0,0.004219,0.219217,0.080627,0,0,0,0,0,0,0,0,0,0,0,0.122271,0.183326,0.081987,0,0,0,0,0,0,0,0,0.09344,0.259702,0.435251,0.556395,0.599011,0.589635,0.564122,0.540014,0.526395,0.49532,0.434884,0.364116,0.296106,0.234628,0.209363,0.187987,0.17807,0.152561,0.08143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0.108187,0.535839,0,0,0,0,0,0,0,0,0,0,0,0.014887,0.804111,1,1,1,0.905663,0.967344,1,1,0.891323,0.230813,0,0,0,0,0,0,0,0,0,0,0.024229,0.197932,0.071031,0,0,0,0,0,0,0,0,0,0,0,0.005902,0.142884,0.162138,0.078895,0.01509,0,0,0,0,0,0.027539,0.117074,0.24106,0.373349,0.472023,0.515188,0.514685,0.495102,0.47203,0.446369,0.426853,0.391677,0.338384,0.294547,0.251635,0.21986,0.190309,0.156992,0.087806,0.020222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0.649778,0,0,0,0,0,0,0,0,0,0,0,0,0.641625,1,1,0.997618,0.853522,0.867528,1,1,0.984766,0.446298,0,0,0,0,0,0,0,0,0,0,0.051905,0.191158,0.061312,0,0,0,0,0,0,0,0,0,0,0,0,0.026335,0.136958,0.149713,0.105376,0.059993,0.026775,0.011031,0.020148,0.039494,0.078742,0.144994,0.238761,0.33302,0.402087,0.433813,0.435462,0.419938,0.399601,0.377601,0.349872,0.329184,0.298356,0.25515,0.229546,0.18634,0.151699,0.085862,0.032169,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0.536446,0.026012,0,0,0,0,0,0,0,0,0,0,0,0.47137,1,1,0.990268,0.837727,0.814211,0.91384,1,1,0.598487,0.097535,0,0,0,0,0,0,0,0,0,0.086316,0.166829,0.04228,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02612,0.112814,0.152509,0.138362,0.105611,0.092455,0.093363,0.101265,0.129332,0.183959,0.247626,0.308623,0.351553,0.367397,0.35887,0.339636,0.321842,0.303106,0.281475,0.253638,0.235439,0.205228,0.166811,0.13193,0.076571,0.031414,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0.282187,0.261322,0,0,0,0,0,0,0,0,0,0,0,0.313505,0.909017,1,0.984891,0.840126,0.793617,0.851049,0.958244,0.969385,0.69737,0.250194,0,0,0,0,0,0,0,0,0.000934,0.116384,0.156986,0.012946,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.008341,0.085825,0.144795,0.14867,0.154271,0.15255,0.150356,0.176362,0.210077,0.246821,0.279425,0.299383,0.302107,0.289463,0.267268,0.24185,0.225863,0.2082,0.18527,0.155922,0.134278,0.096785,0.059709,0.02086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0.042918,0.393985,0,0,0,0,0,0,0,0,0,0,0,0.192665,0.742989,1,0.965126,0.843837,0.784231,0.811306,0.886326,0.90847,0.736825,0.375398,0.058825,0,0,0,0,0,0,0,0.056907,0.144715,0.113864,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.051798,0.095117,0.145772,0.161201,0.17006,0.190605,0.208239,0.22405,0.235344,0.238461,0.231708,0.216478,0.195928,0.172722,0.147512,0.131252,0.113376,0.087869,0.058965,0.036916,0.003862,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0.34611,0.091202,0,0,0,0,0,0,0,0,0,0,0.102795,0.580358,0.901673,0.934652,0.841784,0.77625,0.780085,0.828947,0.845432,0.732071,0.465121,0.171476,0,0,0,0,0,0,0.031735,0.104488,0.151905,0.072014,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.002339,0.055764,0.087553,0.121667,0.146631,0.159416,0.165264,0.165874,0.161235,0.151484,0.13766,0.121278,0.103412,0.08398,0.061636,0.046895,0.031975,0.010987,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0.17443,0.237939,0,0,0,0,0,0,0,0,0,0,0.04725,0.439726,0.770382,0.874214,0.829196,0.765362,0.747924,0.774019,0.785339,0.701441,0.508021,0.274747,0.094239,0.008447,0,0,0,0.029287,0.079425,0.138684,0.128845,0.020096,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.033579,0.058176,0.071339,0.076614,0.077785,0.076693,0.06911,0.059693,0.050738,0.040969,0.03021,0.017755,0.0026,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0.020274,0.265149,0.084866,0,0,0,0,0,0,0,0,0,0.021671,0.331978,0.637745,0.786754,0.789717,0.74431,0.714153,0.712673,0.716652,0.661123,0.515483,0.342736,0.188872,0.096311,0.053021,0.049444,0.054925,0.096003,0.139291,0.151801,0.079044,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.006531,0.014352,0.016731,0.014983,0.01023,0.003256,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0.153172,0.197551,0.017717,0,0,0,0,0,0,0,0,0.017166,0.256872,0.517291,0.681272,0.721759,0.69872,0.67016,0.655017,0.641199,0.6049,0.510015,0.373903,0.261296,0.169822,0.134015,0.110266,0.129531,0.149851,0.152115,0.105358,0.018855,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0.022396,0.200556,0.13341,0,0,0,0,0,0,0,0,0.037911,0.222723,0.429653,0.57897,0.635245,0.632122,0.609965,0.591355,0.571907,0.536144,0.478713,0.389107,0.297975,0.23471,0.18782,0.176712,0.173532,0.158022,0.132305,0.055862,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0.076125,0.189012,0.106264,0.001908,0,0,0,0,0,0,0.074069,0.214096,0.372328,0.497001,0.554322,0.554912,0.536154,0.518217,0.499798,0.470523,0.425868,0.374237,0.309067,0.26127,0.223691,0.202751,0.172838,0.143211,0.073139,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0.112425,0.170245,0.100372,0.044129,0,0,0,0,0.038761,0.114476,0.218536,0.334334,0.428801,0.477263,0.482009,0.462248,0.437653,0.421638,0.400891,0.367917,0.331248,0.294026,0.245866,0.221099,0.176162,0.143213,0.077489,0.008209,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0.000089,0.113563,0.153534,0.131445,0.08583,0.061599,0.041826,0.063535,0.099301,0.154332,0.227636,0.30685,0.371052,0.404394,0.40676,0.389688,0.365031,0.340501,0.325355,0.303927,0.271444,0.24434,0.211539,0.169627,0.130237,0.072974,0.01613,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0.004912,0.092773,0.156683,0.153207,0.135437,0.119761,0.1325,0.154063,0.188437,0.233809,0.281273,0.318031,0.334874,0.331574,0.314983,0.292738,0.268599,0.244003,0.228845,0.205885,0.170183,0.144637,0.102005,0.060385,0.013046,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0.075484,0.135593,0.157141,0.164537,0.176157,0.186425,0.202061,0.224775,0.250296,0.264492,0.263676,0.252828,0.236407,0.216626,0.195583,0.17246,0.146341,0.129541,0.102652,0.066555,0.040829,0.001438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0.039266,0.087723,0.131353,0.157598,0.167634,0.17917,0.195347,0.204224,0.204461,0.195462,0.178485,0.156024,0.13689,0.120395,0.102311,0.080314,0.056812,0.040923,0.016889,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0.040151,0.073026,0.088941,0.113148,0.126258,0.130174,0.126841,0.117612,0.103908,0.087153,0.068306,0.052315,0.041797,0.029048,0.012535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.01035,0.031895,0.044285,0.049388,0.049208,0.045297,0.038808,0.030566,0.021015,0.010138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0");

    tree.addClass("Exokernel", "Scutiformes");
    tree.addOrder("Exokernel", "Scutiformes", "Scutidae");
    tree.addFamily("Exokernel", "Scutiformes", "Scutidae", "Megaloscutinae");
    tree.addGenus("Exokernel", "Scutiformes", "Scutidae", "Megaloscutinae", "Discutium");
    tree.addSpecies("Exokernel", "Scutiformes", "Scutidae", "Megaloscutinae", "Discutium", "Solidus", "R=13;k=bump4();d=gaus(0.356,0.063)*0.1;cells=0,0,0,0,0,0,0,0,0,0,0,0,0.001452,0.002211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0.001086,0.025592,0.063092,0.09771,0.125277,0.140194,0.142909,0.13312,0.109657,0.082543,0.04739,0.01939,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0.002149,0.049803,0.125505,0.206065,0.277959,0.328757,0.363907,0.380963,0.37955,0.365209,0.338161,0.291817,0.242039,0.176705,0.104816,0.042667,0.002547,0,0,0,0,0,0,0,0,0/0,0,0,0,0.020685,0.120025,0.245917,0.369151,0.474272,0.55101,0.60172,0.627334,0.633874,0.624871,0.601016,0.565518,0.52253,0.466298,0.393914,0.314162,0.220808,0.122695,0.037949,0,0,0,0,0,0,0,0/0,0,0,0.028685,0.171527,0.351579,0.520111,0.660406,0.763615,0.824352,0.857361,0.865011,0.85434,0.829584,0.801814,0.761241,0.71597,0.657799,0.597328,0.523231,0.432203,0.322488,0.198495,0.086176,0.011642,0,0,0,0,0,0/0,0,0.011992,0.1811,0.411643,0.634486,0.821633,0.961611,1,1,1,1,1,1,0.963907,0.927761,0.877804,0.826797,0.768297,0.700642,0.620462,0.521655,0.398037,0.260229,0.121181,0.022055,0,0,0,0,0/0,0,0.128572,0.404464,0.685658,0.932873,1,1,1,1,1,1,1,1,1,1,1,0.976545,0.920157,0.856251,0.783771,0.696899,0.586061,0.453315,0.293619,0.136616,0.022593,0,0,0,0/0,0.013123,0.311543,0.644808,0.957059,1,1,1,1,1,1,0.984236,0.98238,0.992159,1,1,1,1,1,0.996046,0.930694,0.853247,0.754476,0.634768,0.477293,0.300724,0.126657,0.013811,0,0,0/0,0.127007,0.503205,0.867078,1,1,1,1,1,0.974143,0.884828,0.838887,0.846155,0.884551,0.938239,0.981128,1,1,1,1,1,0.991614,0.90638,0.801144,0.654124,0.474946,0.273694,0.091297,0,0,0/0,0.262023,0.668441,1,1,1,1,1,0.997727,0.784531,0.646971,0.609337,0.631618,0.696786,0.782467,0.867217,0.934782,0.976829,0.995415,1,1,1,1,0.953079,0.821961,0.644903,0.432925,0.213227,0.043927,0,0/0,0.378862,0.779852,0.972193,0.99843,1,1,1,0.824958,0.498727,0.376943,0.362286,0.404759,0.484302,0.583764,0.686922,0.776406,0.844779,0.896897,0.94327,0.981899,1,1,1,0.979058,0.812261,0.596048,0.352367,0.124786,0.002524,0/0.005069,0.450801,0.838788,0.896459,0.966657,1,1,1,0.529325,0.196713,0.113577,0.121524,0.182155,0.270697,0.376024,0.481344,0.572389,0.645225,0.711656,0.784246,0.866552,0.949325,1,1,1,0.972698,0.751855,0.488341,0.228068,0.036477,0/0.054846,0.475686,0.728941,0.784904,0.911011,1,1,1,0.222526,0,0,0,0,0.059162,0.167705,0.269742,0.3548,0.425862,0.497364,0.581262,0.689476,0.823245,0.956094,1,1,1,0.901213,0.623337,0.32996,0.086809,0/0.066987,0.457608,0.566052,0.657922,0.83079,0.981943,1,0.865917,0.008033,0,0,0,0,0,0,0.055149,0.133089,0.203035,0.276406,0.371152,0.500021,0.670298,0.876902,1,1,1,1,0.74267,0.421948,0.139358,0/0.04407,0.354327,0.39018,0.52403,0.736804,0.934779,1,0.684639,0.105337,0,0,0,0,0,0,0,0,0,0.05762,0.165231,0.314614,0.52486,0.797815,1,1,1,1,0.848716,0.499084,0.183097,0.005401/0,0.143992,0.212252,0.392616,0.629777,0.847944,0.977216,0.498196,0.274329,0.128144,0.042207,0.00423,0,0,0,0,0,0,0,0,0.139869,0.398413,0.77011,1,1,1,1,0.920567,0.548053,0.206802,0.006382/0,0,0.043879,0.259742,0.509991,0.728826,0.823422,0.374239,0.354197,0.304099,0.244382,0.199682,0.142786,0.081749,0.022961,0,0,0,0,0,0,0.336896,0.858824,1,1,1,1,0.947333,0.559987,0.202233,0.001451/0,0,0,0.124148,0.375978,0.579903,0.36021,0.222479,0.259333,0.279185,0.296088,0.304752,0.303809,0.281957,0.210299,0.099184,0.009015,0,0,0,0,0.438229,1,1,1,1,1,0.922967,0.527099,0.1616,0/0,0,0,0,0.222936,0.41325,0,0.019189,0.064284,0.102292,0.135228,0.167718,0.221716,0.274052,0.307022,0.28044,0.174674,0.062443,0.016181,0.004702,0.086702,0.863729,1,1,1,1,1,0.83937,0.444269,0.086225,0/0,0,0,0,0.057203,0,0,0,0,0,0,0,0.021797,0.103928,0.201128,0.285021,0.309335,0.267624,0.216248,0.208887,0.590784,1,1,1,0.988065,0.977823,0.990075,0.7021,0.310583,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.015015,0.142924,0.254285,0.325139,0.359611,0.405384,1,1,0.982067,0.927387,0.883303,0.893713,0.861706,0.518174,0.132502,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.094407,0.207292,0.301136,0.571978,0.939592,0.900036,0.828249,0.747973,0.725807,0.780577,0.633029,0.291904,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.029812,0.140972,0.70488,0.750191,0.686611,0.595382,0.534259,0.560167,0.64962,0.378568,0.026035,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.026581,0.540397,0.507152,0.430289,0.344365,0.321206,0.398508,0.372404,0.091902,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07842,0.292087,0.242553,0.158125,0.093719,0.122336,0.243473,0.078406,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.045454,0.029066,0,0,0,0,0,0,0,0,0,0,0");
    // tree.addSpecies("Exokernel", "Scutiformes", "Scutidae", "Megaloscutinae", "Discutium", "Valvatus", "R=13;k=bump4();d=gaus(0.337,0.0595)*0.1;cells=0,0,0,0,0,0,0,0,0,0.006648,0.020603,0.029604,0.033431,0.032121,0.025776,0.014535,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0.015374,0.060409,0.117492,0.168711,0.211114,0.237117,0.245275,0.237035,0.212264,0.180072,0.136805,0.089105,0.040308,0.010082,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0.014107,0.082889,0.183557,0.284556,0.367336,0.429776,0.464188,0.477669,0.477812,0.46724,0.443596,0.402806,0.356707,0.290975,0.216997,0.140581,0.06796,0.015326,0,0,0,0,0,0,0,0/0,0,0,0.042686,0.160255,0.30434,0.441975,0.548563,0.610487,0.637777,0.639667,0.635513,0.628721,0.623923,0.61419,0.58823,0.552771,0.491988,0.41939,0.332337,0.234533,0.134253,0.047718,0,0,0,0,0,0,0/0,0,0.056882,0.210242,0.396164,0.570889,0.69769,0.761312,0.778405,0.758768,0.739557,0.728259,0.72881,0.735508,0.747098,0.743499,0.720911,0.67306,0.609621,0.524156,0.420358,0.304188,0.183056,0.079042,0.009162,0,0,0,0,0/0,0.042794,0.21545,0.439165,0.656666,0.822167,0.912725,0.924894,0.881102,0.828792,0.795144,0.790801,0.813294,0.84856,0.87918,0.89903,0.887793,0.855681,0.798644,0.715878,0.610179,0.485232,0.351949,0.218466,0.091052,0.012202,0,0,0,0/0.007157,0.169326,0.421038,0.682842,0.905277,1,1,1,0.944812,0.860684,0.823421,0.838284,0.89272,0.963195,1,1,1,1,0.984168,0.910791,0.809934,0.679822,0.532545,0.377413,0.225615,0.088898,0.00629,0,0,0/0.072392,0.331762,0.631245,0.909711,1,1,1,1,0.960393,0.847477,0.815785,0.854071,0.939966,0.983853,1,1,1,1,1,1,1,0.887656,0.730397,0.553757,0.376765,0.209476,0.06767,0,0,0/0.168677,0.493133,0.811944,1,1,1,1,0.994838,0.863695,0.764633,0.735325,0.763189,0.821446,0.894975,0.958162,0.992033,1,1,1,1,1,1,0.94287,0.753984,0.544634,0.346801,0.170188,0.034117,0,0/0.266419,0.61989,0.935587,1,1,1,1,0.92019,0.696114,0.588413,0.5683,0.599962,0.667673,0.74958,0.82337,0.880301,0.918342,0.942944,0.968572,0.991266,1,1,1,0.973906,0.734681,0.496987,0.285994,0.105077,0.000929,0/0.342211,0.684418,0.987157,1,1,1,1,0.774253,0.495599,0.394261,0.38496,0.428241,0.494486,0.571164,0.633145,0.67759,0.705849,0.655991,0.668437,0.77814,0.95078,1,1,1,0.945737,0.661301,0.408954,0.197061,0.033186,0/0.375811,0.67704,0.984802,1,1,1,1,0.586436,0.272526,0.185449,0.187411,0.239867,0.308778,0.379242,0.424648,0.443592,0.42374,0.32988,0.321643,0.435025,0.688224,0.959093,1,1,1,0.836335,0.536681,0.290545,0.083127,0/0.347619,0.623637,0.908091,0.970587,1,1,1,0.377211,0.030604,0,0,0.032488,0.109471,0.176851,0.209908,0.213709,0.181644,0.074089,0.044912,0.138303,0.399562,0.856757,1,1,1,1,0.657485,0.377671,0.138107,0/0.277043,0.563102,0.771519,0.899411,0.999069,1,1,0.167197,0,0,0,0,0,0,0,0,0,0,0,0,0.175751,0.699997,1,1,1,1,0.759427,0.450122,0.184892,0.001902/0.194681,0.503907,0.595377,0.789864,0.959118,1,1,0.096966,0,0,0,0,0,0,0,0,0,0,0,0,0.034847,0.644233,1,1,1,1,0.8251,0.495267,0.212583,0/0.107051,0.274198,0.405462,0.647493,0.87508,0.988941,0.651962,0.266338,0.115619,0.038762,0.012439,0,0,0,0,0,0,0,0,0,0,0.769284,1,1,1,1,0.839292,0.510731,0.211954,0/0.007255,0.056074,0.217398,0.488561,0.748209,0.909804,0.433373,0.363135,0.292336,0.231376,0.201939,0.184162,0.153747,0.109371,0.041834,0,0,0,0,0,0.144754,1,1,1,0.999251,0.987519,0.810343,0.493055,0.18085,0/0,0,0.042058,0.322132,0.581966,0.697805,0.287,0.302014,0.305995,0.296745,0.297203,0.299094,0.300544,0.29172,0.242863,0.153653,0.060636,0.020833,0.012835,0.041434,0.546174,1,1,0.984993,0.927707,0.922173,0.739128,0.442791,0.117266,0/0,0,0,0.151643,0.396713,0.25807,0.078775,0.124436,0.151772,0.156215,0.159773,0.169974,0.194451,0.22724,0.268381,0.287033,0.264642,0.227242,0.222669,0.281763,1,1,0.963465,0.865149,0.804415,0.832528,0.638306,0.356426,0.01686,0/0,0,0,0,0.210181,0,0,0,0,0,0,0,0,0.044501,0.11348,0.189975,0.258062,0.294289,0.332089,0.562312,0.981778,0.925258,0.812528,0.700112,0.671662,0.716491,0.511572,0.229026,0,0/0,0,0,0,0.018088,0,0,0,0,0,0,0,0,0,0,0.018983,0.107985,0.180995,0.242339,0.691954,0.842008,0.744533,0.620404,0.529876,0.545853,0.535993,0.352837,0.051593,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.014995,0.088353,0.700761,0.647036,0.548501,0.428651,0.366937,0.428903,0.336373,0.153411,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.502191,0.444041,0.338331,0.231829,0.207607,0.21056,0.11046,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.286338,0.220839,0.115007,0.024019,0.032348,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.057473,0,0,0,0,0,0,0,0,0,0");
    tree.addGenus("Exokernel", "Scutiformes", "Scutidae", "Megaloscutinae", "Serratus");
    tree.addSpecies("Exokernel", "Scutiformes", "Scutidae", "Megaloscutinae", "Serratus", "Simplex", "R=10;k=quad4(1/2,1);d=quad4(0.35,0.061)*0.1;cells=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.003045,0.007447,0.007268,0.007962,0.014323,0.024372,0.028666,0.019851,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.005604,0.05989,0.128633,0.1824,0.205364,0.202384,0.185002,0.173246,0.179055,0.185027,0.17016,0.120398,0.057629,0.00842,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.047999,0.209956,0.370251,0.475328,0.520803,0.523533,0.493628,0.4445,0.415138,0.402961,0.381697,0.340604,0.260576,0.160634,0.065895,0.005752,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.003249,0.099673,0.345756,0.598191,0.744826,0.806149,0.821723,0.80325,0.748286,0.690054,0.645547,0.620408,0.579422,0.518228,0.420728,0.289654,0.153284,0.048581,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.003203,0.025959,0.081025,0.223233,0.492395,0.789462,0.952685,1,1,1,1,0.987476,0.919916,0.863313,0.815302,0.747643,0.659866,0.540745,0.383637,0.21954,0.080871,0.004724/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.002886,0.143974,0.279129,0.372435,0.457177,0.56859,0.754606,0.992588,1,1,1,1,1,1,1,1,1,0.940282,0.847463,0.741605,0.594178,0.408983,0.218547,0.067131/0.012916,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.261647,0.590824,0.838569,1,1,1,1,1,1,0.990892,0.996458,1,1,1,1,1,1,1,0.998423,0.887115,0.746038,0.55375,0.33027,0.131427/0.04279,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.427832,0.926908,1,1,1,1,1,1,1,0.89207,0.878272,0.959575,0.998256,1,1,1,1,1,1,1,0.883537,0.687703,0.441586,0.206368/0.151806,0.010453,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.187935,0.885939,1,1,1,1,1,1,0.905855,0.670932,0.629738,0.780815,0.900058,0.95898,0.978285,0.986402,0.99981,1,1,1,1,0.881742,0.635518,0.377094/0.396444,0.143597,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.493404,1,1,1,1,0.971092,0.85495,0.616959,0.401027,0.364349,0.514291,0.679172,0.768716,0.794651,0.800307,0.858179,0.940977,0.991069,1,1,1,0.923818,0.666859/0.682616,0.386078,0.104301,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.186342,0.989648,1,1,1,0.771285,0.528729,0.294132,0.180249,0.145422,0.22954,0.387336,0.502115,0.537772,0.552147,0.640751,0.796759,0.93174,0.992894,1,1,1,0.94138/0.884984,0.606534,0.276379,0.024482,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.22369,0.929217,1,1,1,0.658027,0.213467,0,0,0,0,0.079534,0.225833,0.305866,0.351413,0.454864,0.620412,0.787849,0.896004,0.95263,0.992886,1,1/0.994475,0.713286,0.382847,0.083111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.026495,0.071956,0.280177,0.76602,0.898974,0.97479,1,1,0.607685,0.003631,0,0,0,0,0,0,0.110633,0.177412,0.27552,0.421994,0.571375,0.68283,0.772159,0.902562,1,1/0.924333,0.593804,0.285201,0.05303,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.045097,0.641059,0.590413,0.660502,0.800516,0.921406,0.996863,1,1,0.493388,0.030911,0,0,0,0,0,0,0,0,0.054587,0.167233,0.307622,0.475753,0.701762,0.965619,1,1/0.605353,0.306041,0.079169,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.296947,0.662087,0.389127,0.512675,0.744072,0.919794,0.996042,1,1,0.371538,0.142875,0.021515,0,0,0,0,0,0,0,0,0,0.076949,0.486108,0.970805,1,1,1/0.439336,0.158266,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.250349,0.060873,0.239995,0.539432,0.774873,0.894212,0.971056,1,0.472121,0.313908,0.180886,0.049548,0,0,0,0,0,0,0,0,0.068843,0.82042,1,1,1,0.963402/0.585494,0.182171,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.171946,0.442383,0.629498,0.793232,0.926942,0.474863,0.406066,0.363181,0.26778,0.055995,0,0,0,0,0,0,0,0.391255,1,1,1,1,1/1,0.42845,0.064,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.101239,0.358923,0.601418,0.595717,0.3589,0.322075,0.306751,0.336029,0.254139,0.084322,0.041255,0.062708,0.091352,0.056019,0.035887,0.079238,0.9323,1,1,1,1,1/1,0.784651,0.232425,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.201673,0.456979,0.217079,0.11396,0.042292,0.039692,0.147038,0.263813,0.273429,0.262043,0.294544,0.311711,0.303634,0.295477,0.560051,1,1,1,1,1,1/0.996504,1,0.349273,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.111316,0.173633,0,0,0,0,0,0.087121,0.190333,0.223352,0.259563,0.322009,0.420251,0.534365,0.938885,1,1,0.993083,0.990927,0.987372,0.984/0.940986,0.783152,0.141426,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.031443,0.068444,0.153134,0.315989,0.553706,1,0.979225,0.879354,0.796748,0.750357,0.736729,0.792947/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.108547,0.411125,0.892758,0.870386,0.663985,0.453419,0.375871,0.280261,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.563051,0.685139,0.706483,0.483606,0.20987,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.291985,0.40609,0.495201,0.372014,0.112091,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.003501,0.08701,0.214383,0.182581,0.017407,0,0,0");
    tree.addSpecies("Exokernel", "Scutiformes", "Scutidae", "Megaloscutinae", "Serratus", "Undulatus", "R=13;k=quad4(5/12,1,1/2);d=quad4(0.272,0.0375)*0.1;cells=0.861417,0.782942,0.494045,0.602745,0.75954,0.885167,0.977366,1,0.504503,0.415255,0.349145,0.230644,0.190926,0.168164,0.169325,0.158299,0.117622,0.060219,0.01803,0,0,0.022813,0.059772,0.082107,0.172116,1,1,0.947361,0.831546,0.770657,0.55058,0.402905,0,0/0,0.158272,0,0.037143,0.264979,0.470042,0.729199,0.806228,0.44502,0.353631,0.360511,0.343742,0.320655,0.288445,0.272608,0.271407,0.271521,0.229774,0.185461,0.146074,0.141957,0.213452,0.267112,0.306665,1,1,0.921522,0.499955,0.130105,0,0,0,0,0/0,0,0,0,0,0.165999,0.487297,0.493734,0.299091,0.152594,0.126818,0.184742,0.233883,0.209007,0.152795,0.158465,0.235693,0.290496,0.310948,0.317253,0.342737,0.386057,0.419022,0.876984,1,1,0.982957,0.925158,0.797414,0,0,0,0,0/0,0,0,0,0,0.069814,0.383897,0.126952,0.111158,0,0,0,0.08182,0.039876,0,0,0.063188,0.190146,0.223914,0.258777,0.306251,0.370236,0.428765,0.986422,0.988724,0.980264,0.979416,0.950509,0.8872,0.734766,0.441434,0,0,0/0,0,0,0,0,0.194826,0.279366,0,0,0,0,0,0,0,0,0,0,0.03588,0.046454,0.026838,0.051622,0.202485,0.554105,0.840596,0.770691,0.690559,0.690489,0.688138,0.663077,0.769901,0.827258,0.118068,0,0/0,0,0,0,0,0.029676,0.038405,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.111907,0.37909,0.595239,0.406574,0.241624,0.153467,0.133212,0.324007,0.793937,0.857959,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.023194,0.416933,0.18589,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.286935,0.145992,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.052117,0.084413,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.006938,0.01705,0.021692,0.0133,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0.023445,0.059155,0.085493,0.095435,0.096611,0.091506,0.082736,0.087849,0.132883,0.17784,0.184795,0.145035,0.077601,0.022244,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0.0183,0.11999,0.250538,0.331336,0.348049,0.325223,0.309279,0.323564,0.337498,0.339166,0.350508,0.356001,0.31614,0.231244,0.116508,0.042194,0.016056,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0.031367,0.193406,0.373931,0.479695,0.533966,0.553688,0.584604,0.580463,0.550134,0.531569,0.467885,0.425159,0.421895,0.390897,0.325602,0.218744,0.137885,0.083197,0.023776,0,0,0,0,0,0,0,0/0,0,0,0,0,0.015378,0.049921,0.156979,0.33949,0.49815,0.590767,0.691353,0.789921,0.837127,0.771985,0.668913,0.678906,0.637586,0.537074,0.577812,0.571688,0.543659,0.479186,0.365537,0.296454,0.237389,0.135451,0.030079,0,0,0,0,0,0/0,0,0.005612,0.115433,0.257071,0.395117,0.494138,0.550426,0.596281,0.65441,0.700464,0.754781,0.851041,0.942836,0.959305,0.898058,0.870043,0.89265,0.86049,0.795663,0.699361,0.687889,0.716018,0.621432,0.501946,0.436674,0.344119,0.198807,0.060737,0,0,0,0,0/0,0,0.12809,0.36983,0.627241,0.802932,0.873384,0.896416,0.902239,0.910364,0.877025,0.733219,0.694924,0.910658,1,1,1,0.903807,0.92019,0.970489,0.924555,0.897582,0.891756,0.811172,0.656322,0.535016,0.428904,0.259543,0.075774,0,0,0,0,0/0,0,0.045623,0.297448,0.749625,0.983631,0.961156,0.980646,1,1,1,0.786499,0.574238,0.772533,1,1,1,0.838642,0.919409,1,1,1,0.942459,0.859383,0.766073,0.628259,0.505238,0.312172,0.08128,0,0,0,0,0/0,0,0,0.003818,0.466963,0.944087,1,0.978372,0.856738,0.904556,0.914693,0.834354,0.600041,0.573883,0.834741,0.919111,0.9059,0.874444,0.936986,1,1,1,0.757647,0.696493,0.787705,0.765417,0.63548,0.465163,0.220896,0.032542,0,0,0,0/0,0,0.001993,0.150677,0.415273,0.675864,1,1,0.542363,0.342649,0.605772,0.652728,0.595972,0.388543,0.306725,0.646562,0.717302,0.748096,0.792372,0.855137,0.868052,0.722447,0.555622,0.676745,0.940853,1,0.891249,0.776534,0.628162,0.377624,0.129174,0.008178,0,0/0.12809,0.536465,0.822062,1,1,1,1,1,0.55685,0.039818,0.24911,0.411207,0.405977,0.325414,0.153227,0.38647,0.530249,0.581695,0.580729,0.415838,0.322547,0.470711,0.624953,0.852335,0.985031,1,1,0.989841,0.903548,0.771465,0.497187,0.209431,0.014056,0/0.453904,1,1,1,1,1,1,1,0.718788,0.041434,0,0.011877,0.127049,0.128836,0.133555,0.196878,0.285796,0.341912,0.332212,0.197379,0.216462,0.46239,0.606908,0.721393,0.807798,0.877884,0.972308,1,0.99979,0.94748,0.68848,0.356226,0.096841,0/0.362336,1,1,1,1,1,0.978539,0.82534,0.550783,0.174032,0,0,0,0,0,0,0,0.017202,0.099467,0.111922,0.159708,0.282597,0.397025,0.428471,0.223064,0.365763,0.895472,1,1,0.867715,0.483624,0.182678,0.040701,0/0,0.364047,0.868367,0.97408,1,1,0.831432,0.337665,0.186514,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.487115,1,1,0.802892,0.433738,0.055047,0,0,0/0,0,0,0.246183,0.829899,1,1,0.249601,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.197596,0.962383,1,1,1,0.776775,0.3203,0,0,0/0,0,0,0.054459,0.400227,0.922102,1,0.609549,0.028304,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.357771,0.83733,1,1,1,1,1,0.603386,0.150569,0/0.328454,0.665397,0.752517,0.918121,0.954822,0.989663,1,1,0.21081,0.130835,0.028919,0,0,0,0,0,0,0,0,0,0,0,0,0,0.103566,0.414802,0.819932,1,1,1,1,1,0.550322,0.001422/0.864402,0.817661,0.769322,0.916685,0.986577,1,1,1,0.393656,0.30517,0.178539,0.042624,0.010869,0.002296,0.002669,0,0,0,0,0,0,0,0,0,0,0.458579,1,1,1,1,1,1,0.549528,0.005589");
    
    tree.addGenus("Exokernel", "Scutiformes", "Scutidae", "Megaloscutinae", "Triscutium");
    tree.addSpecies("Exokernel", "Scutiformes", "Scutidae", "Megaloscutinae", "Triscutium", "Centrale", "R=13;k=bump4();d=gaus(0.377,0.0697)*0.1;cells=0,0,0,0,0,0,0,0,0,0.017332,0.043559,0.066337,0.084099,0.092763,0.089413,0.077829,0.0606,0.034872,0.016429,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0.006928,0.051039,0.118945,0.186716,0.24595,0.288182,0.312747,0.321677,0.315976,0.295395,0.25861,0.218044,0.163154,0.111477,0.061349,0.021159,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0.043181,0.14495,0.26413,0.372485,0.460813,0.527177,0.56985,0.590821,0.593927,0.58081,0.551422,0.516353,0.462737,0.405516,0.335079,0.25654,0.175698,0.10035,0.038164,0.001395,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0.083168,0.239318,0.409362,0.561294,0.681009,0.767913,0.822981,0.854669,0.864964,0.858151,0.838514,0.809906,0.764833,0.715779,0.651913,0.581889,0.504982,0.417725,0.321084,0.219298,0.12153,0.042889,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0.092535,0.302517,0.5274,0.72885,0.889458,1,1,1,1,1,1,1,1,0.990235,0.927925,0.864977,0.794667,0.719945,0.640513,0.553024,0.453089,0.339496,0.218944,0.106748,0.027558,0,0,0,0,0,0,0,0,0,0/0,0,0.053191,0.306595,0.590902,0.85295,1,1,1,1,1,1,1,1,1,1,1,1,1,0.934432,0.860698,0.79395,0.726805,0.650456,0.558957,0.444305,0.310765,0.174538,0.069566,0.006609,0,0,0,0,0,0,0,0/0,0,0.231985,0.57467,0.902555,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.998427,0.928886,0.87305,0.82865,0.784962,0.726665,0.644319,0.530374,0.386996,0.24017,0.109839,0.022352,0,0,0,0,0,0,0/0,0.07046,0.457065,0.847016,1,1,1,1,1,1,0.983852,0.951273,0.945481,0.9606,0.980865,0.995009,1,1,1,0.979937,0.920985,0.883372,0.865206,0.856353,0.839969,0.795637,0.71921,0.598377,0.44794,0.289417,0.142985,0.033144,0,0,0,0,0,0/0,0.235427,0.675099,1,1,1,1,1,1,0.922491,0.792708,0.737001,0.739471,0.778934,0.82798,0.880301,0.915592,0.937292,0.944926,0.88999,0.853146,0.841772,0.855362,0.884686,0.9114,0.911725,0.873003,0.784368,0.65018,0.491048,0.321114,0.157748,0.037753,0,0,0,0,0/0,0.402278,0.85225,0.98849,1,1,1,1,0.952445,0.651842,0.508156,0.470216,0.491272,0.540699,0.611741,0.681529,0.743818,0.78463,0.797198,0.764087,0.751516,0.767869,0.813907,0.881839,0.953413,1,1,0.946882,0.834571,0.685254,0.513398,0.329146,0.153911,0.02745,0,0,0,0/0.032783,0.530321,0.896706,0.930704,0.986636,1,1,1,0.680406,0.334496,0.226699,0.21466,0.248276,0.312117,0.387468,0.472887,0.547169,0.605618,0.646423,0.639628,0.645671,0.682573,0.753535,0.854031,0.967584,1,1,1,1,0.865884,0.699073,0.5107,0.312391,0.12917,0.013064,0,0,0/0.129141,0.605867,0.782004,0.839493,0.943639,1,1,1,0.362909,0.040851,0,0,0.023861,0.094737,0.178136,0.272106,0.359365,0.429137,0.482826,0.530082,0.552914,0.602899,0.688101,0.807254,0.949695,1,1,1,1,1,0.873982,0.686388,0.479379,0.265119,0.079971,0,0,0/0.185198,0.600958,0.635976,0.732126,0.883248,0.998302,1,0.934258,0.112535,0,0,0,0,0,0,0.097298,0.202588,0.281435,0.33845,0.387709,0.449975,0.531066,0.625474,0.742244,0.858658,0.955869,1,1,1,1,1,0.852684,0.641082,0.412288,0.189681,0.027657,0,0/0.201561,0.417693,0.478114,0.616035,0.808652,0.969777,1,0.764496,0.065,0,0,0,0,0,0,0.006671,0.138856,0.215288,0.254004,0.28218,0.329857,0.403099,0.496336,0.607878,0.726488,0.846763,0.948456,1,1,1,1,1,0.802813,0.56353,0.310065,0.096238,0,0/0.175562,0.21764,0.319236,0.501239,0.72078,0.908836,1,0.617823,0.225278,0.075337,0.010171,0,0,0.003611,0.033828,0.1402,0.269139,0.312207,0.294627,0.261643,0.253569,0.283381,0.352762,0.448834,0.561977,0.683762,0.812918,0.931557,0.999587,1,1,1,0.955526,0.705762,0.438066,0.181167,0.016235,0/0,0.017806,0.170466,0.386951,0.617376,0.814979,0.945795,0.438823,0.377724,0.288662,0.210003,0.175483,0.186737,0.235368,0.297561,0.40989,0.484071,0.492096,0.447593,0.359584,0.254203,0.189029,0.202002,0.271739,0.375157,0.494243,0.63029,0.781281,0.923776,1,1,1,1,0.847561,0.557813,0.270217,0.052541,0/0,0,0.028753,0.268492,0.496785,0.683955,0.475566,0.342633,0.370256,0.381306,0.384547,0.389566,0.406471,0.418269,0.410415,0.422756,0.44387,0.483712,0.531224,0.490156,0.333137,0.137634,0.047299,0.087897,0.179537,0.29897,0.437867,0.602658,0.787963,0.954172,1,1,1,0.97824,0.671474,0.35714,0.097116,0/0,0,0,0.141679,0.355731,0.464683,0.093973,0.158641,0.211931,0.264062,0.295225,0.31614,0.311936,0.274209,0.233437,0.211864,0.231226,0.284705,0.370168,0.511093,0.420523,0.129138,0,0,0,0.110425,0.251508,0.427245,0.641808,0.880451,1,1,1,1,0.772575,0.431247,0.138578,0/0,0,0,0,0.192726,0,0,0,0,0.029812,0.056059,0.055245,0.033836,0,0,0,0.018325,0.107321,0.233971,0.390011,0.439004,0.18795,0,0,0,0,0.081651,0.267886,0.517402,0.820161,1,1,1,1,0.853748,0.486766,0.167526,0.001834/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.075765,0.268337,0.414387,0.307299,0.048922,0,0,0,0,0.135418,0.433351,0.827204,1,1,1,1,0.907055,0.515074,0.175192,0.001142/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.140538,0.35987,0.399278,0.177256,0.002774,0,0,0,0.051499,0.451751,0.959339,1,1,1,1,0.922503,0.508823,0.159176,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.257464,0.408359,0.324862,0.120556,0.008103,0,0,0.117407,0.707123,1,1,1,1,1,0.887957,0.463966,0.115315,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.114606,0.320212,0.393092,0.308718,0.175172,0.089308,0.06632,0.537801,1,1,1,1,1,1,0.796575,0.372042,0.047117,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.172931,0.326644,0.383816,0.367706,0.331439,0.544451,1,1,1,1,1,1,1,0.649852,0.235532,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.173603,0.299741,0.385315,0.440388,1,1,0.996082,0.97228,0.943928,0.940395,0.966941,0.861015,0.447668,0.060344,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1413,0.267812,0.591543,0.922933,0.906942,0.867305,0.819599,0.802498,0.838291,0.90197,0.602163,0.19819,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.098909,0.717725,0.731993,0.701465,0.650006,0.615851,0.640707,0.72434,0.658943,0.301618,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.059707,0.493512,0.494592,0.455176,0.411632,0.410584,0.486502,0.609474,0.330214,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1505,0.253726,0.238452,0.194638,0.169927,0.215773,0.3392,0.281309,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.031698,0.174033,0,0,0,0,0,0,0");
    tree.addSpecies("Exokernel", "Scutiformes", "Scutidae", "Megaloscutinae", "Triscutium", "Laterale", "R=13;k=bump4();d=gaus(0.365,0.0653)*0.1;cells=0,0,0,0,0,0,0,0,0.018186,0.04611,0.071696,0.087907,0.097358,0.094098,0.084928,0.067414,0.041139,0.021056,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0.002109,0.048411,0.119947,0.194424,0.254409,0.300195,0.325851,0.334931,0.329487,0.309701,0.277692,0.240375,0.187397,0.136571,0.081286,0.031666,0.000743,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0.028438,0.132337,0.258424,0.375455,0.467015,0.52744,0.563595,0.580357,0.579407,0.566889,0.54641,0.512861,0.472184,0.422049,0.363641,0.290821,0.215976,0.136981,0.064267,0.013454,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0.047641,0.204701,0.387369,0.546707,0.66893,0.748756,0.792376,0.808523,0.807373,0.794276,0.770602,0.738409,0.705252,0.66034,0.617659,0.564844,0.504431,0.439445,0.360001,0.267021,0.167332,0.075761,0.013451,0,0,0,0,0,0,0,0,0,0,0/0,0,0.032709,0.232272,0.47483,0.691521,0.857756,0.965378,1,1,1,1,0.981758,0.950269,0.909109,0.866309,0.814999,0.767512,0.714112,0.660018,0.607676,0.546982,0.474428,0.385955,0.279916,0.16417,0.060775,0,0,0,0,0,0,0,0,0,0/0,0,0.186931,0.491155,0.777389,1,1,1,1,1,1,1,1,1,1,1,0.958749,0.900545,0.837863,0.776441,0.722523,0.66901,0.614477,0.553603,0.47817,0.378896,0.253816,0.12005,0.024885,0,0,0,0,0,0,0,0/0,0.059756,0.411654,0.769546,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.95311,0.881147,0.818034,0.758989,0.704831,0.655174,0.605727,0.544563,0.455169,0.326139,0.176257,0.050223,0,0,0,0,0,0,0/0,0.228442,0.647652,1,1,1,1,1,1,0.998943,0.965313,0.941497,0.942176,0.958241,0.975818,0.988939,1,1,1,0.981545,0.912667,0.84693,0.786067,0.732118,0.686627,0.645506,0.594359,0.508984,0.37892,0.215171,0.069256,0,0,0,0,0,0/0,0.418123,0.836601,1,1,1,1,1,1,0.895488,0.807524,0.773659,0.777317,0.80339,0.841024,0.875995,0.912306,0.943782,0.967927,0.985979,0.997657,0.942794,0.881434,0.820215,0.766024,0.722678,0.685431,0.634545,0.552198,0.409301,0.23203,0.07191,0,0,0,0,0/0.099449,0.55105,0.941623,0.994095,1,1,1,1,0.897555,0.688694,0.588831,0.5624,0.570592,0.598438,0.638974,0.682379,0.732466,0.791573,0.847313,0.904266,0.951826,0.984026,0.991191,0.933787,0.870299,0.813176,0.769129,0.730731,0.681702,0.576975,0.418121,0.222369,0.059477,0,0,0,0/0.197838,0.607073,0.862904,0.936939,1,1,1,1,0.663687,0.425225,0.350591,0.338453,0.350954,0.377588,0.4145,0.462843,0.519006,0.592583,0.675991,0.767653,0.856537,0.929098,0.976268,0.998541,1,0.931105,0.87034,0.829606,0.789203,0.718559,0.585732,0.396211,0.186597,0.032716,0,0,0/0.2342,0.621222,0.708434,0.851051,0.983372,1,1,0.947554,0.330071,0.10938,0.062459,0.070523,0.094675,0.125634,0.163361,0.18797,0.236591,0.355746,0.48719,0.609295,0.735214,0.842043,0.923055,0.973279,0.997376,1,0.988183,0.939022,0.894705,0.842104,0.736982,0.562828,0.341205,0.131491,0.009499,0,0/0.237934,0.418008,0.555846,0.76502,0.954475,1,1,0.577525,0,0,0,0,0,0,0,0,0,0,0.195399,0.444636,0.59707,0.734563,0.840193,0.913417,0.961164,0.990272,1,1,1,0.958914,0.873393,0.72045,0.502197,0.259643,0.065536,0,0/0.121831,0.234879,0.43147,0.68803,0.909762,1,1,0.259359,0.020832,0,0,0,0,0,0,0,0,0,0,0.247573,0.462775,0.613038,0.729298,0.813534,0.876037,0.927815,0.973649,1,1,1,0.999093,0.861019,0.649369,0.396077,0.156173,0.013323,0/0,0.084717,0.333117,0.612026,0.846047,0.980176,0.624047,0.323121,0.158572,0.047287,0.008328,0,0,0,0,0,0,0,0,0.080322,0.33296,0.486352,0.589922,0.664934,0.728785,0.796003,0.872288,0.949594,1,1,1,1,0.794541,0.529231,0.259562,0.054935,0/0,0,0.244889,0.523415,0.754254,0.61079,0.432913,0.401981,0.333016,0.268476,0.222102,0.207226,0.20991,0.218093,0.218855,0.204023,0.167501,0.11476,0.058394,0.056376,0.242377,0.34212,0.421264,0.48339,0.544343,0.616119,0.708981,0.82742,0.950223,1,1,1,0.925826,0.656059,0.360343,0.111057,0/0,0,0.149857,0.414449,0.482209,0.209359,0.302357,0.353247,0.37321,0.378298,0.390807,0.409152,0.417299,0.428321,0.399997,0.37686,0.35608,0.322265,0.251619,0.194206,0.215356,0.189357,0.213643,0.271054,0.340509,0.421015,0.525646,0.668113,0.847146,0.989397,1,1,1,0.769906,0.454128,0.171614,0.010042/0,0,0.041094,0.284669,0,0.010765,0.105322,0.180327,0.233537,0.257712,0.26332,0.300222,0.432655,0.457467,0.420753,0.380429,0.370417,0.369461,0.392725,0.37844,0.23286,0.036512,0,0.036629,0.122677,0.22232,0.344381,0.506249,0.72734,0.956239,1,1,1,0.868866,0.534529,0.222783,0.023348/0,0,0,0,0,0,0,0,0,0,0,0.144807,0.235941,0.246183,0.223765,0.205793,0.230013,0.299594,0.393567,0.421774,0.250228,0.03102,0,0,0,0.022511,0.170261,0.356909,0.624201,0.933965,1,1,1,0.951064,0.593443,0.259211,0.032114/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.069285,0.196816,0.346666,0.337527,0.109586,0,0,0,0,0.004244,0.234995,0.572448,0.967237,1,1,1,1,0.62257,0.272591,0.031392/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.028931,0.257291,0.358489,0.221937,0.024251,0,0,0,0,0.169823,0.63991,1,1,1,1,1,0.617131,0.254627,0.018281/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.144187,0.314006,0.310336,0.140872,0.010289,0,0,0,0.275839,0.942998,1,1,1,1,0.974004,0.570558,0.207974,0.000301/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.021656,0.220335,0.322551,0.292945,0.160671,0.062189,0.031908,0.071651,0.767055,1,1,1,1,1,0.878639,0.476909,0.127431,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.086049,0.234161,0.322839,0.324302,0.287263,0.26883,0.728859,1,1,1,0.99797,0.991141,0.996819,0.728621,0.338518,0.023715,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.093616,0.229319,0.322572,0.380131,0.680685,1,0.999657,0.977948,0.943397,0.920343,0.932643,0.908081,0.531082,0.160087,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.068044,0.200875,0.446947,0.90911,0.902097,0.871827,0.822331,0.787029,0.799206,0.850421,0.653398,0.289129,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.099769,0.681583,0.705857,0.687165,0.642243,0.602679,0.609483,0.676239,0.704219,0.365211,0.004693,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.32582,0.442456,0.452814,0.420527,0.380367,0.379165,0.4503,0.568098,0.381332,0.032317,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.152979,0.185604,0.171052,0.134115,0.124355,0.188254,0.320081,0.336377,0.018324,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.040123,0.211311,0,0,0,0,0,0,0");

    tree.addOrder("Exokernel", "Scutiformes", "Pterifera");
    tree.addFamily("Exokernel", "Scutiformes", "Pterifera", "Diplopterinae");
    tree.addGenus("Exokernel", "Scutiformes", "Pterifera", "Diplopterinae", "Synptera");
    tree.addSpecies("Exokernel", "Scutiformes", "Pterifera", "Diplopterinae", "Synptera", "Cavus Saliens", "R=13;k=bump4();d=gaus(0.26,0.038)*0.1;cells=0,0,0,0,0,0,0,0,0,0,0,0,0,0.002216,0.003508,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0,0,0.131013,0.284785,0.252959,0.1253,0.123162,0.122399,0.119725,0.113363,0.094672,0.061055,0.012475,0,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0,0,0.50038,0.926568,1,1,1,1,1,0.586301,0.384469,0.300553,0.262062,0.212597,0.127959,0.0263,0,0,0,0,0,0,0,0,0,0,0/0,0,0,0.07795,0.637773,0.914363,1,0.911841,0.756253,0.825745,1,1,1,0.813138,0.508033,0.412057,0.366985,0.286195,0.1434,0.018368,0,0,0,0,0,0,0,0,0,0/0,0,0.015847,0.468309,0.798883,1,0.663916,0.327936,0.132146,0.064437,0.395065,1,1,1,0.687231,0.476694,0.467381,0.436004,0.306329,0.118738,0.001312,0,0,0,0,0,0,0,0,0/0,0,0.247915,0.550926,0.931392,0.910654,0.282743,0.019788,0,0,0.01592,1,1,1,0.728989,0.445777,0.519361,0.576294,0.490908,0.28944,0.077769,0,0,0,0,0,0,0,0,0/0,0,0.27154,0.641149,0.998502,0.68145,0.038227,0,0,0,0.048116,0.986852,1,1,0.643199,0.422172,0.608397,0.742929,0.671862,0.484136,0.233531,0.046099,0,0,0,0,0,0,0,0/0,0.079055,0.304247,0.736166,1,0.474997,0,0,0,0,0.431842,0.937005,1,1,0.66033,0.612052,0.849236,0.892379,0.767893,0.617185,0.406863,0.175862,0.028761,0,0,0,0,0,0,0/0,0.11123,0.357269,0.807483,1,0.358664,0,0,0,0.178321,0.604781,0.889037,1,1,0.994228,1,1,0.844017,0.660932,0.613983,0.515186,0.334976,0.144969,0.02397,0,0,0,0,0,0/0.017683,0.158605,0.409436,0.827619,1,0.229568,0,0,0,0.225121,0.594643,0.846454,0.970666,1,1,0.988736,0.895803,0.48341,0.370881,0.45032,0.531442,0.458056,0.310354,0.142673,0.024028,0,0,0,0,0/0.067406,0.21191,0.446412,0.637428,0.708816,0.251035,0.01018,0,0,0.274019,0.62713,0.825492,0.900972,0.902626,0.835988,0.706379,0.320275,0.02736,0.004155,0.186642,0.419409,0.531106,0.476871,0.331512,0.152596,0.023101,0,0,0,0/0,0,0.031339,0.19843,0.403865,0.379493,0.147643,0.010123,0,0.427123,0.729825,0.805791,0.768247,0.654282,0.34858,0,0,0,0,0,0.246605,0.511299,0.605217,0.53216,0.349409,0.149974,0.020717,0,0,0/0,0,0,0,0.231688,0.385429,0.361139,0.242436,0.364768,0.713374,0.906433,0.730198,0.066412,0,0,0,0,0,0,0,0.163744,0.504282,0.708955,0.70289,0.542579,0.331118,0.137536,0.017906,0,0/0,0,0,0,0.089582,0.262989,0.372379,0.439803,0.667954,0.77567,0.475008,0,0,0,0,0,0,0,0,0,0.311968,0.686292,0.874962,0.821205,0.660442,0.474445,0.2853,0.112407,0.003398,0/0,0,0,0,0,0.093207,0.227491,0.360742,0.548877,0.527938,0.267554,0,0,0,0,0,0,0,0,0.283937,0.772272,1,0.99245,0.796753,0.648571,0.526929,0.386139,0.214852,0.055704,0/0,0,0,0,0,0,0.025057,0.173808,0.370524,0.52992,0.371021,0.034522,0,0,0,0,0,0,0.091797,0.688122,0.954526,1,0.830753,0.606237,0.546766,0.517966,0.430626,0.280149,0.107104,0/0,0,0,0,0,0,0,0,0.147145,0.448024,0.487211,0.151301,0,0,0,0,0,0,0.581339,0.839043,1,1,0.773845,0.642022,0.612262,0.559775,0.459528,0.307018,0.135494,0.010203/0,0,0,0,0,0,0,0,0,0.184827,0.543272,0.371156,0.082957,0,0,0,0,0.371973,0.739004,0.901771,1,1,1,1,1,0.821319,0.533259,0.315645,0.133478,0.012214/0,0,0,0,0,0,0,0,0,0,0.268221,0.548633,0.38283,0.167151,0.030007,0,0.064289,0.715812,0.795913,0.87601,0.957139,1,1,1,1,1,0.705348,0.328,0.110622,0.003247/0,0,0,0,0,0,0,0,0,0,0,0.272623,0.518395,0.501425,0.383485,0.411828,0.96114,0.796456,0.732125,0.742798,0.800887,0.882905,0.973107,1,1,1,0.997794,0.33866,0.072807,0/0,0,0,0,0,0,0,0,0,0,0,0,0.241703,0.475465,0.609447,0.960653,1,0.675282,0.51624,0.496834,0.537902,0.613374,0.347521,0.362884,0.71116,1,1,0.33143,0.029395,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0.284785,0.632168,0.867814,0.612262,0.216173,0.116627,0.127383,0.155491,0,0,0,0.096407,0.973608,1,0.302928,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0.146696,0.41068,0.551486,0.250182,0,0,0,0,0,0,0,0.030644,0.903334,1,0.20359,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0.055617,0.272574,0.399857,0.26333,0.024873,0,0,0,0,0,0,0.237515,1,1,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.178459,0.339855,0.366826,0.173718,0.017328,0,0,0,0.008212,0.202925,0.679096,1,0.929912,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.047144,0.227049,0.377735,0.408659,0.340356,0.285446,0.22357,0.240963,0.470821,0.810627,1,0.969309,0.316173,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.029139,0.207371,0.604857,0.959307,1,1,1,1,0.967614,0.857588,0.574276,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.044938,0.496839,0.736361,0.785367,0.789454,0.752594,0.694762,0.614587,0.468686,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.327384,0.330006,0.319392,0.312143,0.311958,0.311267,0.218037,0,0,0,0,0,0/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.109584,0.082969,0.05803,0.058267,0.01516,0,0,0,0,0,0,0,0");

}

#ifdef OPENMP
void Lenia::update() {
    vector<vector<double>> newData = data;
    newData = conv2d->apply(newData);
  
    #pragma omp parallel for
    for (unsigned int y = 0; y < height; y++) {
        for (unsigned int x = 0; x < width; x++) {
            double d = deltaFunc(newData[y][x]);
            delta[y][x] = d;
            newData[y][x] = clip(data[y][x] + 1.0 / updateFrequency * d, 0.0, 1.0);
        }
    }

    data = newData;

    generation++;
}
#else
void Lenia::update() {
    vector<vector<double>> newData = data;
    // newData = conv2d->apply(newData);
    newData = convolve2D(newData, kernel);
  
    for (unsigned int y = 0; y < height; y++) {
        for (unsigned int x = 0; x < width; x++) {
            double d = deltaFunc(newData[y][x]);
            delta[y][x] = d;
            if (softClip) {
                newData[y][x] = sigmoid(data[y][x] + 1.0 / updateFrequency * d, 0.0, 1.0);
            } else {
                newData[y][x] = clip(data[y][x] + 1.0 / updateFrequency * d, 0.0, 1.0);
            }
        }
    }

    data = newData;

    generation++;
}
#endif

double Lenia::deltaFunc(double x) {
    double r = abs(x - mu);
    double r2 = r * r;
    double k, k2, p, q; // Declare variables outside the switch
    switch (deltaId) {
        case 0:
            k = 2.0 * sigma * sigma;
            return exp(-r2 / k) * 2.0 - 1.0;
        case 1:
            k2 = 9.0 * sigma * sigma;
            return r2 > k2 ? -1.0 : pow(1.0 - r2 / k2, alpha) * 2.0 - 1.0;
        case 2:
            p = sigma / 2.0;
            q = sigma * 2.0;
            return r <= p ? 1.0 : r <= q ? 2.0 * (q - r) / (q - p) - 1.0 : -1.0;
        case 3:
            return r <= sigma ? 1.0 : -1.0;
    }
    return 0.0;
}

void Lenia::updateStats(bool shouldCalc) {
    vol = 0;
    volg = 0;

    m00 = 0;
    m10 = 0;
    m01 = 0;
    m11 = 0;
    m20 = 0;
    m02 = 0;
    m30 = 0;
    m03 = 0;
    m21 = 0;
    m12 = 0;
    m22 = 0;
    m31 = 0;
    m13 = 0;
    m40 = 0;
    m04 = 0;

    g00 = 0;
    g10 = 0;
    g01 = 0;

    if (!shouldCalc)
        return;
        
    oldmX = mX - shiftX;
    oldmY = mY - shiftY;
    oldaM = aM;
    oldaMG = aMG;
    #ifdef OPENMP
    #pragma omp parallel for reduction(+:m00,m10,m01,m11,m20,m02,m30,m03,m21,m12,m22,m31,m13,m40,m04,g00,g10,g01,vol,volg)
    #endif
    for (int i = 0; i < width; i++) {
        for (int j = 0; j < height; j++) {
            int y = i<oldmY-width/2 ? i+width : i>oldmY+width/2 ? i-width : i;
			int x = j<oldmX-width/2 ? j+width : j>oldmX+width/2 ? j-width : j;
            double v = data[i][j];
            double g = std::max(0.0, delta[i][j]);
            if (IsPos(v)) {
                vol++;
            }
            if (IsPos(g)) {
                volg++;
            }

            double vx = v*x;
            double vy = v*y;
            double vxx = vx*x;
            double vyy = vy*y;
            double vxy = vx*y;
            double vxxx = vxx*x;
            double vyyy = vyy*y;
            double vxxy = vxx*y;
            double vxyy = vyy*x;

            double gx = g*x;
            double gy = g*y;

            m00 += v;
            m10 += vx;
            m01 += vy;
            m11 += vxy;
            m20 += vxx;
            m02 += vyy;
			m30 += vxxx;
            m03 += vyyy;
            m21 += vxxy;
            m12 += vxyy;
			m22 += vxxy*y;
            m31 += vxxx*y;
            m13 += vyyy*x;
            m40 += vxxx*x;
            m04 += vyyy*y;
			g00 += g;
			g10 += gx;
            g01 += gy;
        }
    }

    mX = m00 == 0 ? width / 2.0 : m10 / m00;
    mY = m00 == 0 ? height / 2.0 : m01 / m00;
    gX = g00 == 0 ? width / 2.0 : g10 / g00;
    gY = g00 == 0 ? height / 2.0 : g01 / g00;

    double X2 = mX * mX;
    double X3 = X2 * mX;
    double Y2 = mY * mY;
    double Y3 = Y2 * mY;
    double XY = mX * mY;

    centralMoment11 = m11 - mX * m01;
    centralMoment20 = m20 - mX * m10;
	centralMoment02 = m02 - mY * m01;
    centralMoment30 = m30 - 3.0 * mX * m20 + 2.0 * X2 * m10;
	centralMoment03 = m03 - 3.0 * mY * m02 + 2.0 * Y2 * m01;
    centralMoment21 = m21 - 2.0 * mX * m11 - mY * m20 + 2.0 * X2 * m01;
	centralMoment12 = m12 - 2.0 * mY * m11 - mX * m02 + 2.0 * Y2 * m10;
    centralMoment22 = m22 - 2.0 * mY * m21 + Y2 * m20 - 2.0 * mX * m12 + 4.0 * XY * m11 - 2.0 * mX * Y2 * m10 + X2 * m02 - 2.0 * X2 * mY * m01 + X2 * Y2 * m00;
    centralMoment31 = m31 - mY * m30 + 3.0 * mX * (mY * m20 - m21) + 3.0 * X2 * (m11 - mY * m10) + X3 *(mY * m00 - m01);
    centralMoment13 = m13 - mX * m03 + 3.0 * mY * (mX * m02 - m12) + 3.0 * Y2 * (m11 - mX * m01) + Y3 * (mX * m00 - m10);
    centralMoment40 = m40 - 4.0 * mX * m30 + 6.0 * X2 * m20 - 4.0 * X3 * m10 + X2 * X2 * m00;
    centralMoment04 = m04 - 4.0 * mY * m03 + 6.0 * Y2 * m02 - 4.0 * Y3 * m01 + Y2 * Y2 * m00;

    if (IsZero(m00)) {
        normalizedMoment11 = 0;
        normalizedMoment20 = 0;
        normalizedMoment02 = 0;
        normalizedMoment30 = 0;
        normalizedMoment03 = 0;
        normalizedMoment21 = 0;
        normalizedMoment12 = 0;
        normalizedMoment22 = 0;
        normalizedMoment31 = 0;
        normalizedMoment13 = 0;
        normalizedMoment40 = 0;
        normalizedMoment04 = 0;
    } else {
        double m2 = m00 * m00;
        double mA = m00 * m00 * sqrt(m00);
        double m3 = m00 * m00 * m00;
        normalizedMoment11 = centralMoment11/m2;
        normalizedMoment20 = centralMoment20/m2;
        normalizedMoment02 = centralMoment02/m2;
		normalizedMoment30 = centralMoment30/mA;
        normalizedMoment03 = centralMoment03/mA;
        normalizedMoment21 = centralMoment21/mA;
        normalizedMoment12 = centralMoment12/mA;
		normalizedMoment22 = centralMoment22/m3;
        normalizedMoment31 = centralMoment31/m3;
        normalizedMoment13 = centralMoment13/m3;
        normalizedMoment40 = centralMoment40/m3;
        normalizedMoment04 = centralMoment04/m3;
    }

    double Z = normalizedMoment11 * 2.0;
    double A = normalizedMoment20 + normalizedMoment02;
	double B = normalizedMoment20 - normalizedMoment02;
	double C = normalizedMoment30 + normalizedMoment12;
	double D = normalizedMoment30 - normalizedMoment12;
	double E = normalizedMoment03 + normalizedMoment21;
	double F = normalizedMoment03 - normalizedMoment21;
	double G = normalizedMoment30 - 3.0 * normalizedMoment12;
	double H = 3.0 * normalizedMoment21 - normalizedMoment03;
	double Y = 2.0 * normalizedMoment22;
	double I = normalizedMoment40 + normalizedMoment04;
	double J = normalizedMoment40 - normalizedMoment04;
	double K = normalizedMoment31 + normalizedMoment13;
	double L = normalizedMoment31 - normalizedMoment13;
    double CC = C * C;
	double EE = E * E;
	double CC_EE = CC - EE;
	double CC_EE3 = CC - 3.0 * EE;
	double CC3_EE = 3.0 * CC - EE;
	double CE = C * E;
	double DF = D * F;
    huMomentInvariant1 = A;
	huMomentInvariant2 = B * B + Z * Z;
	huMomentInvariant3 = G * G + H * H;
	huMomentInvariant4 = CC + EE;
	huMomentInvariant5 = G * C * CC_EE3 + H * E * CC3_EE;
	huMomentInvariant7 = H * C * CC_EE3 - G * E * CC3_EE;
	huMomentInvariant6 = B * CC_EE + 2.0 * Z * CE;
	huMomentInvariant9 = I + Y;
	huMomentInvariant8 = Z * CC_EE / 2.0 - B * CE;
	huMomentInvariant10 = J * CC_EE + 4.0 * L * DF;
	huMomentInvariant11 = -2.0 * K * CC_EE - 2.0 * J * DF;

    double M = I - 3.0 * Y;
	double t1 = CC_EE * CC_EE - 4.0 * CE * CE;
	double t2 = 4.0 * CE * CC_EE;

    huMomentInvariant12 =  4.0 * L * t2 + M * t1;
	huMomentInvariant13 = -4.0 * L * t1 + M * t2;

    double t3 = huMomentInvariant1 / 2.0 * m00;
	double t4 = sqrt(huMomentInvariant2) / 2.0 * m00;
	axisA = t3 + t4;
	axisB = t3 - t4;
    ec = sqrt(1.0 - axisB / axisA);

    cp = m00 / (centralMoment20 + centralMoment02);

	th = atan2(Z, B) / 2.0 / M_PI * 180.0;

    dth = 0;
	if (oldth > 30.0 && th < -30.0) {
		th180 = wrapD(th180 + 180.0, 360.0);
		dth = 180.0;
	} else if (oldth < -30.0 && th > 30.0) {
		th180 = wrapD(th180 - 180.0, 360.0);
		dth = -180.0;
	}

    dth += !oldth ? 0.0 : th - oldth;
    dth = wrapD(dth + 540.0, 360.0) - 180.0;
	oldth = th;
	th += th180;

    TwoPointsData p2 = TwoPoints(mX, mY, oldmX, oldmY, oldaM);
    dM = p2.distance;
    aM = p2.angle;
    daM = p2.angleDiff;
    p2 = TwoPoints(mX, mY, gX, gY, oldaMG);
    dMG = p2.distance;
    aMG = p2.angle;
    daMG = p2.angleDiff;

    if (generation < 2) {
        daM = 0;
        daMG = 0;
    }

    arrowX = mX;
    arrowY = mY;
    mX = wrapD(mX, width);
    mY = wrapD(mY, height);
    if (generation < 10) {
        return;
    }

    updateStat("Mass", m00/NS/NS, true, 0.0);
    updateStat("Growth", g00/NS/NS, true, 0.0);
    updateStat("Mass Volume", vol/NS/NS, true, 0.0);
    updateStat("Growth Volume", volg/NS/NS, true, 0.0);
    updateStat("Mass Density", m00/vol, false, 0.0);
    updateStat("Growth Density", g00/volg, false, 0.0);
    updateStat("Centroid Speed", dM/NS*updateFrequency, false, 0.0);
    updateStat("Growth Centroid Distance", dMG/NS, false, 0.0);
    updateStat("Centroid rotate speed", dM/NS*updateFrequency<0.01 ? 0 : daM*updateFrequency, false, 0.0);
    updateStat("Growth Centroid rotate speed", dMG/NS<0.01 ? 0 : daMG*updateFrequency, false, 100, true, true);
    updateStat("Major axis rotate speed", dth*updateFrequency, false, 100.0, true, true);
    updateStat("Moment of inertia", huMomentInvariant1, true, 0.0);
    updateStat("Skewness", huMomentInvariant4, false, 0.0, false, false);
    updateStat("Hu's 5", huMomentInvariant5, false, 0.0, false, false);
    updateStat("Hu's 6", huMomentInvariant6, false, 0.0, false, false);
    updateStat("Hu's 7", huMomentInvariant7, false, 0.0, false, false);
    updateStat("Kurtosis", huMomentInvariant9, false, 0.0);
    updateStat("Flusser's 8", huMomentInvariant10, false, 0.0, false, false);
    updateStat("Flusser's 9", huMomentInvariant11, false, 0.0, false, false);
    updateStat("Flusser's 10", huMomentInvariant12, false, 0.0, false, false);
}

void Lenia::updateStat(std::string name, double value, bool logScale, double max) {
    updateStat(name, value, logScale, max, false, true);
}

void Lenia::updateStat(std::string name, double value, bool logScale, double max, bool forceMax, bool add) {
    for (Stat& stat : stats) {
        if (stat.name == name) {
            stat.value = value;
            if (stat.max + add ? 0.1 : 0.0 > *std::max_element(stat.data.begin(), stat.data.end())) {
                stat.max = *std::max_element(stat.data.begin(), stat.data.end());
                if (add) {
                    stat.max += 0.1;
                }
            }
            if (abs(logScale ? log(abs(value) + 0.5) : value) > stat.max) {
                stat.max = abs(logScale ? log(abs(value) + 0.5) : value);
                if (add) {
                    stat.max += 0.1;
                }
            }

            if (forceMax) {
                stat.max = max;
            }
            stat.data.push_back(abs(logScale ? log(abs(value) + 0.5) : value));
            if (stat.data.size() > statLength) {
                stat.data.erase(stat.data.begin());
            }
            return;
        }
    }

    Stat stat;
    stat.name = name;
    stat.value = value;
    stat.data = vector<double>(statLength, 0.0);
    stat.data.push_back(abs(logScale ? log(abs(value)) : value));
    stat.max = max;
    if (stat.data.size() > statLength) {
        stat.data.erase(stat.data.begin());
    }
    stats.push_back(stat);
}

void Sparkline(std::string id, const double* value, int count, double min_v, double max_v, int offset, const ImVec4& color, const ImVec2& size) {
    ImPlot::PushStyleVar(ImPlotStyleVar_PlotPadding, ImVec2(0,0));
    if (ImPlot::BeginPlot(id.c_str(), size, ImPlotFlags_CanvasOnly)) {
        ImPlot::SetupAxes(nullptr, nullptr, ImPlotAxisFlags_NoDecorations, ImPlotAxisFlags_NoDecorations);
        ImPlot::SetupAxesLimits(0, count - 1, min_v, max_v, ImGuiCond_Always);
        ImPlot::SetNextLineStyle(color);
        ImPlot::SetNextFillStyle(color, 0.25);
        ImPlot::PlotLine(id.c_str(), value, count, 1, 0, ImPlotLineFlags_Shaded, offset);
        ImPlot::EndPlot();
    }
    ImPlot::PopStyleVar();
}

void Lenia::drawImGui() {
    ImGui::Begin("Simulation Parameters", nullptr);
    double min = 0.0;
    double max = 0.3;
    ImGui::SliderScalar("mu", ImGuiDataType_Double, &mu, &min, &max);

    min = 0.0;
    max = 0.1;
    
    ImGui::SliderScalar("sigma", ImGuiDataType_Double, &sigma, &min, &max);

    ImGui::SliderInt("Update Frequency", &updateFrequency, 1, 100);

    ImGui::Checkbox("Soft Clip", &softClip);

    ImGui::End();

    ImGui::Begin("Organisms", nullptr);
    // use the taxonomy tree to display the organisms
    drawTree(tree.root, 0);
    ImGui::End();

    ImGui::Begin("Stats", nullptr);
    if (ImGui::BeginTable("##table", 3, ImGuiTableFlags_BordersOuter | ImGuiTableFlags_BordersV |
                                   ImGuiTableFlags_RowBg | ImGuiTableFlags_Resizable | ImGuiTableFlags_Reorderable, ImVec2(-1,0))) {
        ImGui::TableSetupColumn("Name", ImGuiTableColumnFlags_WidthFixed, 75.0f);
        ImGui::TableSetupColumn("Value", ImGuiTableColumnFlags_WidthFixed, 75.0f);
        ImGui::TableSetupColumn("Plot");
        ImGui::TableHeadersRow();
        ImPlot::PushColormap(ImPlotColormap_Cool); 
        int row = 0;
        for (Stat& stat : stats) {
            ImGui::TableNextRow();
            ImGui::TableSetColumnIndex(0);
            ImGui::TextUnformatted(stat.name.c_str());
            ImGui::TableSetColumnIndex(1);
            stringstream stream;
            stream << fixed << setprecision(3) << stat.value;
            string v = stream.str();
            ImGui::TextUnformatted(v.c_str());
            ImGui::TableSetColumnIndex(2);
            ImGui::PushID(row);
            Sparkline(stat.name, stat.data.data(), statLength, 0, stat.max, 0, ImPlot::GetColormapColor(row), ImVec2(ImGui::GetContentRegionAvail().x, 35));
            ImGui::PopID();
            row++;
        }
        ImPlot::PopColormap();
        ImGui::EndTable();
    }
    ImGui::End();
}

void Lenia::drawTree(TreeNode* node, int level) {
    if (node == nullptr) {
        return;
    }

    if (node->isLeaf()) {
        if (ImGui::Button(node->name.c_str())) {
            parse(node->data);
        }
    } else {
        if (ImGui::TreeNode(node->name.c_str())) {
            for (TreeNode* child : node->children) {
                drawTree(child, level + 1);
            }
            ImGui::TreePop();
        }
    }
}

void Lenia::setRule(string rule) {
	vector<string> parts = split(rule, regex("\\=|\\;|\\*"));

    LeniaTemplate templateRule;

    if (parts.size() > 1) {
        templateRule.kernelRadius = stoi(parts[1]);
    }

    if (parts.size() > 3) {
        vector<string> parts3 = split(parts[3], regex("\\(|\\)|\\,"));
        vector<string> parts3p = split(parts3[0].substr(4), regex("\\/"));
        bool hasE = parts[3].find(")(") != string::npos;
        templateRule.deltaId = -1;
        templateRule.coreId = -1;
        templateRule.layerId = -1;

        templateRule.kernel_B = vector<double>(4, 0.0);
        templateRule.kernel_E = vector<double>(4, 0.0);

        if (parts3[0]=="bimo4") { parts3[0] = "qua4d"; }
        else if (parts3[0]=="bist4") { parts3[0] = "stpz1/4"; }
		else if (parts3[0]=="trmo4") { parts3[0] = "quad4"; templateRule.layerId = 2; }
        if (parts3p.size() >= 3) { templateRule.kernel_B[0] = UnSimpFrac(parts3p[1]+"/"+parts3p[2]); templateRule.layerId = 1; }

        templateRule.coreId = coreName[parts3[0]];
        if (templateRule.layerId == -1) {
            if (hasE) {
                templateRule.layerId = max(static_cast<int>((parts3.size() - 4) / 2), 0);
            } else {
                templateRule.layerId = max(static_cast<int>(parts3.size()) - 2, 0);
            }
        }

        for (int i = 0; i < 4; i++) {
            if (i <= templateRule.layerId) {
                try {
                    templateRule.kernel_B[i] = UnSimpFrac(parts3[i+1]);
                } catch (const invalid_argument& e) {
                    templateRule.kernel_B[i] = 0.0;
                }
            }
            if (hasE) {
                if (i <= templateRule.layerId) {
                    try {
                        templateRule.kernel_E[i] = UnSimpFrac(parts3[i+templateRule.layerId+1]);
                    } catch (const invalid_argument& e) {
                        templateRule.kernel_E[i] = 0.0;
                    }
                }
            }
        }
        
        if (templateRule.layerId <= 1 && templateRule.kernel_B[0] == 0.0) {
            templateRule.kernel_B[0] = 1.0;
        }
    }

    if (parts.size() > 5) {
        vector<string> parts5 = split(parts[5], regex("\\(|\\)|\\,"));
        templateRule.deltaId = deltaName[parts5[0]];
        templateRule.mu = UnSimpFrac(parts5[1]);
        templateRule.sigma = UnSimpFrac(parts5[2]);
    }

    templateRule.alpha = 4.0;

    kernel = buildKernel(width, templateRule.kernelRadius, templateRule.coreId, templateRule.layerId, templateRule.kernel_B, templateRule.alpha);
    conv2d = new FastConv2D(buildKernel(width, templateRule.kernelRadius, templateRule.coreId, templateRule.layerId, templateRule.kernel_B, templateRule.alpha), width, height);
    NS = templateRule.kernelRadius;
    mu = templateRule.mu;
    sigma = templateRule.sigma;
    alpha = templateRule.alpha;
    deltaId = templateRule.deltaId;
}

vector<string> sliceString(const vector<string>& vec, int start, int end) {
    int vec_size = vec.size();

    if (start < 0) {
        start = vec_size + start;
    }
    if (end < 0) {
        end = vec_size + end;
    }

    if (start < 0 || start > vec_size || end < 0 || end > vec_size || start > end) {
        throw out_of_range("Invalid slice range");
    }

    return vector<string>(vec.begin() + start, vec.begin() + end);
}

CellArray ToCellArray(string cellSt) {
    regex re("/");
    vector<string> cells = split(cellSt, re);
    int h = cells.size();
    int w = 0;
    
    for (int i = 0; i < h; ++i) {
        string row = trim(cells[i]);
        vector<string> rowVec = split(row, regex(","));
        w = max(w, static_cast<int>(rowVec.size()));
        cells[i] = join(rowVec, ",");
    }

    vector<vector<string>> finalCells(h, vector<string>(w));
    for (int i = 0; i < h; ++i) {
        vector<string> rowVec = split(cells[i], regex(","));
        for (int j = 0; j < w; ++j) {
            finalCells[i][j] = (j < rowVec.size()) ? rowVec[j] : "";
        }
    }

    return { finalCells, w, h };
}

void Lenia::addCellArrray(vector<vector<string>> cells, int x1, int y1, int x2, int y2, double scale, double angle, int flip, int w, int h) {
    double sinValue = sin(angle / 180.0 * M_PI);
    double cosValue = cos(angle / 180.0 * M_PI);
    int fh = (abs(h*cosValue) + abs(w*sinValue) + 1) * scale - 1;
    int fw = (abs(w*cosValue) + abs(h*sinValue) + 1) * scale - 1;
    int fi0 = (y2<=0) ? y1 : RandomInt(y1, y2 - fh);
	int fj0 = (x2<=0) ? x1 : RandomInt(x1, x2 - fw);
    for (int fi=0; fi<fh; fi++) {
		for (int fj=0; fj<fw; fj++) {
            int i = round( (- (fj-fw/2)*sinValue + (fi-fh/2)*cosValue) / scale + h/2 );
            int j = round( (+ (fj-fw/2)*cosValue + (fi-fh/2)*sinValue) / scale + w/2 );
            int fii = wrap(fi+fi0, this->height);
			int fjj = wrap(fj+fj0, this->width);
            if (flip==2||flip==3) i = h - 1 - i;
			if (flip==1||flip==3) j = w - 1 - j;
            string c = (i>=0 && j>=0 && i<h && j<cells[i].size()) ? cells[i][j] : "";
            double value = c.empty() ? 0.0 : stod(c);
            if (value > 0) {
                data[fii][fjj] = value;
            }
        }
    }
}

void Lenia::parse(string pattern) {
    vector<string> parts = split(pattern, regex("\\;"));
    string cellString = "";
    if (parts.size() == 1) {
        cellString = pattern;
    } else if (parts.size() >= 4) {
        cellString = split(parts[3], regex("\\="))[1];
        string ruleString = join(sliceString(parts, 0, -1), ";");
        setRule(ruleString);
    }
    if (cellString.size() != 0) {
        this->reset();
        CellArray cells = ToCellArray(cellString);
        this->addCellArrray(cells.arr, floor(width/2-cells.w/2), floor(height/2-cells.h/2), 0, 0, 1, 0, 0, cells.w, cells.h);
    }
}

string Lenia::toString() const {
    return "";
}

void Lenia::reset() {
    for (unsigned int y = 0; y < height; y++) {
        for (unsigned int x = 0; x < width; x++) {
            data[y][x] = 0.0;
        }
    }
    generation = 0;

        mX = 0;
    mY = 0;

    gX = 0;
    gY = 0;

    axisA = 0;
    axisB = 0;
    th = 0;
    ec = 0;
    cp = 0;

    vol = 0;
    volg = 0;
    moi = 0;
    rog = 0;

    m00 = 0;
    m10 = 0;
    m01 = 0;
    m11 = 0;
    m20 = 0;
    m02 = 0;
    m30 = 0;
    m03 = 0;
    m21 = 0;
    m12 = 0;
    m22 = 0;
    m31 = 0;
    m13 = 0;
    m40 = 0;
    m04 = 0;

    g00 = 0;
    g10 = 0;
    g01 = 0; 

    centralMoment11 = 0;
    centralMoment20 = 0;
    centralMoment02 = 0;
    centralMoment30 = 0;
    centralMoment03 = 0;
    centralMoment21 = 0; 
    centralMoment12 = 0;
    centralMoment22 = 0;
    centralMoment31 = 0;
    centralMoment13 = 0;
    centralMoment40 = 0;
    centralMoment04 = 0;

    normalizedMoment11 = 0;
    normalizedMoment20 = 0;
    normalizedMoment02 = 0;
    normalizedMoment30 = 0;
    normalizedMoment03 = 0;
    normalizedMoment21 = 0; 
    normalizedMoment12 = 0;
    normalizedMoment22 = 0;
    normalizedMoment31 = 0;
    normalizedMoment13 = 0;
    normalizedMoment40 = 0;
    normalizedMoment04 = 0;

    huMomentInvariant1 = 0;
    huMomentInvariant2 = 0;
    huMomentInvariant3 = 0;
    huMomentInvariant4 = 0;
    huMomentInvariant5 = 0;
    huMomentInvariant6 = 0;
    huMomentInvariant7 = 0;
    huMomentInvariant8 = 0;
    huMomentInvariant9 = 0;
    huMomentInvariant10 = 0;
    huMomentInvariant11 = 0;
    huMomentInvariant12 = 0;
    huMomentInvariant13 = 0;

    oldth = 0;
    dth = 0;
    th180 = 0;

    shiftX = 0;
    shiftY = 0;
    oldmX = 0;
    oldmY = 0;
    dM = 0;
    aM = 0;
    oldaM = 0;
    daM = 0;
    aMG = 0;
    dMG = 0;
    oldaMG = 0;
    daMG = 0;
    // reset stats
    stats.clear();
}

